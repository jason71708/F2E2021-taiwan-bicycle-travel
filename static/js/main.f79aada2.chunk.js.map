{"version":3,"sources":["constants/routes.ts","styles/breakpoint.ts","components/Header/styled.ts","components/Navbar/styled.ts","components/Navbar/index.tsx","hooks/useBreakpoint/index.ts","constants/index.ts","components/Header/index.tsx","store/station/index.ts","styles/helper.ts","components/SearchList/styled.ts","constants/availableCities.ts","store/displayType/index.ts","components/SearchList/ResultCard/styled.ts","utils/status/index.ts","components/SearchList/ResultCard/index.tsx","components/SearchList/index.tsx","components/PositionButton/styled.ts","store/geolocation/index.ts","components/PositionButton/index.tsx","components/ToggleDisplayButton/styled.ts","components/ToggleDisplayButton/index.tsx","components/Layout/index.tsx","components/Marks/PositionMarker/styled.ts","assets/images/dribbble-unscreen.gif","components/Marks/PositionMarker/index.tsx","styles/theme.ts","components/Marks/StationMarker/StationIcon/styled.ts","components/Marks/StationMarker/StationIcon/index.tsx","components/Marks/StationMarker/StationPopup/styled.ts","components/Marks/StationMarker/StationPopup/index.tsx","components/Marks/StationMarker/index.tsx","components/Marks/index.tsx","components/MapContainer/index.tsx","App.tsx","store/reducers.ts","utils/api/index.ts","utils/api/station/index.ts","utils/api/availability/index.ts","store/station/saga.ts","store/sagas.ts","store/index.ts","styles/resetCss.ts","index.tsx"],"names":["Routes","breakpoints","xs","sm","md","lg","xl","breakpoint","createBreakpoint","HeaderWrapper","styled","section","props","theme","colors","primary","HeaderContent","div","layout","headerHeight","default","LogoWrapper","img","MenuWrapper","button","grey","NavBarWrapper","nav","LinkContent","span","match","NavBar","location","useLocation","to","Bicycle","pathname","className","useBreakpoint","StationStatus","DisplayTypes","ServiceStatus","bp","isMin","useMediaQuery","query","Header","isMdBp","useState","showMenu","setShowMenu","src","alt","onClick","stationSlice","createSlice","name","initialState","pedding","data","error","reducers","request","state","action","success","payload","failure","actions","stationRequestAction","stationSuccessAction","stationFailureAction","shawdowCss","css","limitLineCss","lineLimit","rotate","keyframes","rotateAnimation","stationStatusCss","status","Default","Limited","alert","SearchListWrapper","isUnfold","SearchListUnfoldButton","SearchBar","SearchResultListWrapper","ul","SearchInputWrapper","SearchInput","input","SearchButton","SearchSelect","select","availableCities","type","Bike","displayTypeSlice","update","displayTypeUpdateAction","ResultCardWrapper","li","ResultCardTitle","h1","ResultCardContentWrapper","ResultCardBadge","BadgeTitle","BadgeInfo","ResultCardTip","ResultCardBorderTip","getStationStatusType","serviceStatus","availableBikes","Disabled","ResultCard","station","badgeClick","StationName","Zh_tw","split","AvailableRentBikes","AvailableReturnBikes","Parking","SearchList","openSearchList","unfoldButtonClick","map","useMap","dispatch","useDispatch","useSelector","displayType","keyword","setKeyword","City","city","setCity","badgeClickHandler","targetType","targetData","flyTo","StationPosition","PositionLat","PositionLon","animate","onChange","e","target","value","CityName","placeholder","onKeyPress","key","submitSearch","length","StationID","PositionButtonWrapper","active","locating","geolocationSlice","position","reset","geolocationUpdateAction","PositionButton","setWatchPositionId","setLocating","geolocation","watchPositionAndUpdate","watchId","navigator","watchPosition","coords","latitude","longitude","id","place","effect","ToggleDisplayButtonWrapper","DisplayButton","ToggleDisplayButton","toggleDisplayTypeHandler","Layout","domRef","useRef","setOpenSearchList","disableEventPropagation","useCallback","current","L","DomEvent","disableClickPropagation","disableScrollPropagation","setTimeout","useEffect","ref","TooltipContentWrapper","userPositionIcon","icon","iconUrl","userPositionSvg","iconSize","iconAnchor","popupAnchor","PositionMarker","Tooltip","offset","typography","h2","h3","h4","h5","content","caption","accent","SvgText","text","color","isOverTen","StationIcon","quantity","pathColor","useMemo","ellipseColor","lighten","width","height","viewBox","fill","xmlns","cx","cy","rx","ry","d","r","x","y","StationPopupTitle","StationPopupInfo","StationPopupStatus","StationPopupBadgeWrapper","StationPopupBadge","StationPopup","Popup","closeButton","minWidth","maxHeight","generateStationIcon","isMdbp","divIcon","html","ReactDOMServer","renderToString","Markers","StationMarker","displayIcon","eventHandlers","click","MapContainer","positionHistory","setMap","style","center","zoom","whenCreated","scrollWheelZoom","zoomControl","path","element","replace","TileLayer","attribution","url","AppContent","App","basename","process","rootReducer","combineReducers","stationReducer","geolocationReducer","displayTypeReducer","getAuthorizationHeader","UTCTime","Date","toUTCString","ShaObj","jsSHA","setHMACKey","HMAC","getHMAC","Authorization","tdxAPI","axios","create","baseURL","transformKeysToFilter","required","searchs","requiredFilter","join","searchFilter","search","searchFields","field","filter","transfromPositionToSpatialFilter","range","stationRequired","stationSearchFields","fetchBikeStationByCity","$format","$filter","get","headers","params","fetchBikeStationNearBy","$spatialFilter","availabilityRequired","fetchAvailabilityStationByCity","fetchAvailabilityStationNearBy","fetchStationSaga","stationSaga","call","stationResponse","availabilityResponse","reduce","result","index","findIndex","availability","push","Object","assign","put","takeLatest","rootSaga","all","fork","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","devTools","run","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f79aada2.chunk.js","sourcesContent":["export enum Routes {\n  Bicycle = '/bicycle',\n  Routes = '/routes',\n  Scenics = '/scenics'\n}","import { createBreakpoint } from 'styled-components-breakpoint'\n\ntype Breakpoint = {\n  [bp: string]: number\n}\n\nexport const breakpoints: Breakpoint = {\n  xs: 0,\n  sm: 360,\n  md: 768,\n  lg: 1280,\n  xl: 1440\n}\n\nconst breakpoint = createBreakpoint(breakpoints)\n\nexport default breakpoint","import styled from 'styled-components'\nimport breakpoint from '../../styles/breakpoint'\n\nexport const HeaderWrapper = styled.section`\n  position: relative;\n  width: 100vw;\n  background-color: ${props => props.theme.colors.primary[400]};\n  text-align: center;\n`\n\nexport const HeaderContent = styled.div`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: ${props => props.theme.layout.headerHeight.default};\n  padding: 10px 20px;\n\n  ${breakpoint('md')`\n    padding: 20px 72px;\n    height: ${props => props.theme.layout.headerHeight.md};\n  `}\n`\n\nexport const LogoWrapper = styled.img`\n  width: 105px;\n\n  ${breakpoint('md')`\n    width: 210px;\n  `}\n`\n\nexport const MenuWrapper = styled.button`\n  color: ${props => props.theme.colors.grey[100]};\n  cursor: pointer;\n`","import styled from 'styled-components'\nimport breakpoint from '../../styles/breakpoint'\n\nexport const NavBarWrapper = styled.nav`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  background-color: ${props => props.theme.colors.primary[100]};\n  padding: 8px 0;\n  color: ${props => props.theme.colors.primary[400]};\n  position: absolute;\n  top: 100%;\n  left: 0;\n  z-index: 403;\n\n  ${breakpoint('md')`\n    position: static;\n    width: auto;\n    background-color: transparent;\n  `}\n\n  & a {\n    text-decoration: none;\n    flex: 1 0 auto;\n\n    &:nth-child(1n+2) {\n      border-left: 1px solid ${props => props.theme.colors.primary[400]};\n\n      ${breakpoint('md')`\n        border-left: none;\n      `}\n    }\n  }\n\n`\n\nexport const LinkContent = styled.span`\n  text-align: center;\n  padding: 4px 0;\n  font-weight: 700;\n  font-size: 12px;\n  transition: background-color 0.2s linear;\n\n  ${breakpoint('md')<{ match: boolean }>`\n    display: inline-block;\n    background-color: ${props => props.match ? props.theme.colors.primary[100] : props.theme.colors.grey[100]};\n    border-radius: 8px;\n    box-shadow: 0 0 0 ${props => props.match ? '3' : '1'}px ${props => props.theme.colors.primary[300]};\n    padding: 8px 16px;\n    margin-left: 16px;\n    font-size: 16px;\n\n    &:hover {\n      box-shadow: 0 0 0 3px ${props => props.theme.colors.primary[300]};\n    }\n  `}\n\n  & i {\n    display: block;\n\n    ${breakpoint('md')`\n      display: inline-block;\n      margin-right: 4px;\n    `}\n  }\n`","import { NavBarWrapper, LinkContent } from './styled'\nimport { Link, useLocation } from 'react-router-dom'\nimport { Routes } from '../../constants/routes'\n\nconst NavBar = () => {\n  const location = useLocation()\n\n  return (\n    <NavBarWrapper>\n      <Link to={Routes.Bicycle}>\n        <LinkContent match={location.pathname === Routes.Bicycle}>\n          <i className=\"fas fa-bicycle\"></i>\n          找單車\n        </LinkContent>\n      </Link>\n      {/* <Link to={Routes.Routes}>\n        <LinkContent match={location.pathname === Routes.Routes}>\n          <i className=\"fas fa-route\"></i>\n          找路線\n        </LinkContent>\n      </Link> */}\n      {/* <Link to={Routes.Scenics}>\n        <LinkContent match={location.pathname === Routes.Scenics}>\n          <i className=\"fas fa-umbrella-beach\"></i>\n          找景點\n        </LinkContent>\n      </Link> */}\n    </NavBarWrapper>\n  )\n}\n\nexport default NavBar","import { useMediaQuery } from 'react-responsive'\nimport { breakpoints } from '../../styles/breakpoint'\n\nfunction useBreakpoint(bp: string, isMin: boolean = true) {\n  return useMediaQuery({ query: `(${isMin ? 'min-width' : 'max-width'}: ${breakpoints[bp]}px)` })\n}\n\nexport default useBreakpoint","export const AVAILABLE_LIMIT = 5\n\nexport enum StationStatus {\n  Limited = 'Limited',\n  Disabled = 'Disabled',\n  Default = 'Default'\n}\n\nexport enum DisplayTypes {\n  Bike = 'Bike',\n  Parking = 'Parking'\n}\n\nexport enum ServiceStatus {\n  '停止營運',\n  '正常營運',\n  '暫停營運'\n}","import { HeaderWrapper, HeaderContent, LogoWrapper, MenuWrapper } from './styled'\nimport NavBar from '../Navbar'\nimport useBreakpoint from '../../hooks/useBreakpoint'\nimport { useState } from 'react'\n\nconst Header = () => {\n  const isMdBp = useBreakpoint('md')\n  const [showMenu, setShowMenu] = useState(false)\n\n  return (\n    <>\n      <HeaderWrapper>\n        <HeaderContent>\n          <LogoWrapper src=\"./logo.png\" alt=\"logo\" />\n          {isMdBp ? (\n            <NavBar />\n          ) : (\n            <MenuWrapper onClick={() => setShowMenu(!showMenu)}>\n              <i className=\"fas fa-bars\"></i>\n            </MenuWrapper>\n          )}\n        </HeaderContent>\n        {showMenu && !isMdBp && <NavBar />}\n      </HeaderWrapper>\n    </>\n  )\n}\n\nexport default Header","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BikeStation, BikeAvailability } from '../../utils/api/types'\nimport { InitialState, SuccessPayload, FailurePayload } from '../types'\n\nexport type Station = BikeStation & BikeAvailability\n\nconst initialState: InitialState<Station[]> = {\n  pedding: false,\n  data: [],\n  error: null\n}\n\nexport type RequestPayload = {\n  keyword: string\n  city: string\n}\n\nexport type NearByRequestPayload = {\n  position: [number, number]\n}\n\nexport const stationSlice = createSlice({\n  name: 'station',\n  initialState,\n  reducers: {\n    request: (state, action: PayloadAction<RequestPayload | NearByRequestPayload>) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.pedding = true\n    },\n    success: (state, action: PayloadAction<SuccessPayload<(BikeStation & BikeAvailability)[]>>) => {\n      state.pedding = false\n      state.data = action.payload.data\n      state.error = null\n    },\n    failure: (state, action: PayloadAction<FailurePayload>) => {\n      state.pedding = false\n      state.error = action.payload.error\n    }\n  }\n})\n\nexport const { request: stationRequestAction, success: stationSuccessAction, failure: stationFailureAction } = stationSlice.actions\n\nexport default stationSlice.reducer","import { css, keyframes } from 'styled-components'\nimport { StationStatus } from '../constants'\n\nexport const shawdowCss = css`\n  box-shadow: 4px 4px 20px 0 ${props => props.theme.colors.grey[500]}30;\n`\n\nexport const limitLineCss = css<{ lineLimit: number }>`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  display: -webkit-box;\n  -webkit-line-clamp: ${props => props.lineLimit};\n  -webkit-box-orient: vertical;\n`\n\nexport const rotate = keyframes`\nfrom {\n  transform: rotate(0deg);\n}\n\nto {\n  transform: rotate(360deg);\n}\n`\n\nexport const rotateAnimation = css`\n  animation: ${rotate} 2s linear infinite;\n`\n\nexport const stationStatusCss = css<{ status: StationStatus}>`\n  color: ${props => props.status === StationStatus.Default ? props.theme.colors.primary[500]\n    : props.status === StationStatus.Limited ? props.theme.colors.alert[600]\n    : props.theme.colors.grey[400]\n  };\n  background-color: ${props => props.status === StationStatus.Default ? props.theme.colors.primary[100]\n    : props.status === StationStatus.Limited ? props.theme.colors.alert[100]\n    : props.theme.colors.grey[200]\n  };\n`\n","import styled from 'styled-components'\nimport { shawdowCss } from '../../styles/helper'\nimport breakpoint from '../../styles/breakpoint'\n\nexport const SearchListWrapper = styled.section<{ isUnfold: boolean }>`\n  position: absolute;\n  bottom: ${props => props.isUnfold ? '0px' : '-230px'};\n  left: 0;\n  width: 100vw;\n  height: 300px;\n  padding: 16px;\n  z-index: 402; // In order to biger than Map's z-index\n  background-color: ${props => props.theme.colors.grey[100]};\n  border-radius: 8px;\n  cursor: initial;\n  /* overflow: hidden; */\n  ${shawdowCss}\n  transition: bottom 0.3s linear;\n\n  ${breakpoint('md')`\n    top: 36px;\n    left: 36px;\n    width: 430px;\n    height: calc(100% - 72px);\n    padding: 28px;\n  `}\n`\n\nexport const SearchListUnfoldButton = styled.button`\n  position: absolute;\n  bottom: 100%;\n  background-color: ${props => props.theme.colors.grey[100]};\n  width: 60px;\n  height: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  border-radius: 6px 6px 0 0;\n  z-index: 402;\n  font-size: 14px;\n\n  ${breakpoint('md')`\n    display: none;\n  `}\n`\n\nexport const SearchBar = styled.div`\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n\n  ${breakpoint('md')`\n    margin-bottom: 28px;\n  `}\n`\n\nexport const SearchResultListWrapper = styled.ul`\n  width: 100%;\n  height: calc(100% - 36px - 28px);\n  overflow: auto;\n  padding-right: 12px;\n`\n\nexport const SearchInputWrapper = styled.div`\n  position: relative;\n  padding: 8px 48px 8px 20px;\n  margin-left: 12px;\n  flex: 1 0 auto;\n  background-color: ${props => props.theme.colors.grey[200]};\n  color: ${props => props.theme.colors.grey[600]};\n  border-radius: 8px;\n  font-weight: bold;\n  font-size: 14px;\n`\n\nexport const SearchInput = styled.input`\n  width: 100%;\n  height: 100%;\n`\n\nexport const SearchButton = styled.button`\n  position: absolute;\n  right: 20px;\n  top: 50%;\n  transform: translateY(-50%);\n  font-size: 20px;\n  color: ${props => props.theme.colors.grey[600]};\n`\n\nexport const SearchSelect = styled.select`\n  width: 100px;\n  padding: 8px 12px;\n  font-size: 15px;\n  line-height: 20px;\n  color: ${props => props.theme.colors.primary[600]};\n  border: 2px solid ${props => props.theme.colors.primary[400]};\n  border-radius: 8px;\n`","const availableCities = [\n  {\n    \"CityName\": \"臺北市\",\n    \"City\": \"Taipei\"\n  },\n  {\n    \"CityName\": \"新北市\",\n    \"City\": \"NewTaipei\"\n  },\n  {\n    \"CityName\": \"桃園市\",\n    \"City\": \"Taoyuan\"\n  },\n  {\n    \"CityName\": \"臺中市\",\n    \"City\": \"Taichung\"\n  },\n  {\n    \"CityName\": \"臺南市\",\n    \"City\": \"Tainan\"\n  },\n  {\n    \"CityName\": \"高雄市\",\n    \"City\": \"Kaohsiung\"\n  },\n  {\n    \"CityName\": \"新竹市\",\n    \"City\": \"Hsinchu\"\n  },\n  {\n    \"CityName\": \"苗栗縣\",\n    \"City\": \"MiaoliCounty\"\n  },\n  {\n    \"CityName\": \"嘉義市\",\n    \"City\": \"Chiayi\"\n  },\n  {\n    \"CityName\": \"屏東縣\",\n    \"City\": \"PingtungCounty\"\n  },\n  {\n    \"CityName\": \"金門縣\",\n    \"City\": \"KinmenCounty\"\n  }\n]\n\nexport default availableCities","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DisplayTypes } from '../../constants'\n\nexport type DisplayTypeState = {\n  type: DisplayTypes\n}\n\nconst initialState: DisplayTypeState = {\n  type: DisplayTypes.Bike\n}\n\nexport const displayTypeSlice = createSlice({\n  name: 'displayType',\n  initialState,\n  reducers: {\n    update: (state, action: PayloadAction<DisplayTypeState>) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.type = action.payload.type\n    }\n  }\n})\n\nexport const { update: displayTypeUpdateAction } = displayTypeSlice.actions\n\nexport default displayTypeSlice.reducer","import styled from 'styled-components'\nimport breakpoint, { breakpoints } from '../../../styles/breakpoint'\nimport { limitLineCss, stationStatusCss } from '../../../styles/helper'\n\nexport const ResultCardWrapper = styled.li`\n  display: block;\n  padding-bottom: 10px;\n  border-bottom: 1px solid ${props => props.theme.colors.grey[300]};\n\n  &:nth-child(n+2) {\n    padding-top: 10px;\n\n    @media screen and (min-width: ${breakpoints.md}px) {\n      padding-top: 20px;\n    }\n  }\n\n  ${breakpoint('md')`\n    padding-bottom: 20px;\n  `}\n`\n\nexport const ResultCardTitle = styled.h1`\n  ${limitLineCss}\n  font-size: 22px;\n  line-height: 26px;\n  font-weight: 700;\n  color: ${props => props.theme.colors.primary[500]};\n`\n\nexport const ResultCardContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 12px;\n`\n\nexport const ResultCardBadge = styled.button`\n  ${stationStatusCss}\n  flex: 1 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-align: center;\n  padding: 4px 20px;\n  border-radius: 8px;\n\n  &:nth-child(n+2) {\n    margin-left: 20px;\n  }\n\n  ${breakpoint('md')`\n    display: block;\n    padding: 8px 0;\n  `}\n`\n\nexport const BadgeTitle = styled.span`\n  display: inline-block;\n  font-size: 15px;\n  line-height: 20px;\n  font-weight: 500;\n\n  & i {\n    margin-right: 4px;\n  }\n\n  ${breakpoint('md')`\n    display: block;\n  `}\n`\n\nexport const BadgeInfo = styled.span`\n  display: inline-block;\n  font-size: 20px;\n  line-height: 32px;\n  font-weight: 700;\n\n  ${breakpoint('md')`\n    display: block;\n    font-size: 26px;\n    margin-top: 4px;\n  `}\n`\n\nexport const ResultCardTip = styled.span`\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 20px;\n  border-radius: 6px;\n  color: ${props => props.theme.colors.grey[500]};\n\n  & i {\n    margin-right: 6px;\n  }\n`\n\nexport const ResultCardBorderTip = styled(ResultCardTip)`\n  padding: 6px 12px;\n  border: 1px solid ${props => props.theme.colors.grey[500]};\n`;\n","import { StationStatus, AVAILABLE_LIMIT } from '../../constants'\n\n/**********************************/\n/******** Ui display logic ********/\n/**********************************/\n\nexport const getStationStatusType = (serviceStatus: number, availableBikes: number) => {\n  if (serviceStatus !== 1) return StationStatus.Disabled\n  return availableBikes > AVAILABLE_LIMIT ? StationStatus.Default\n    : availableBikes > 0 ? StationStatus.Limited\n    : StationStatus.Disabled\n}\n","import { Station } from '../../../store/station'\nimport { ResultCardWrapper, ResultCardTitle, ResultCardContentWrapper, ResultCardBadge, BadgeTitle, BadgeInfo, ResultCardTip, ResultCardBorderTip } from './styled'\nimport { getStationStatusType } from '../../../utils/status'\nimport { ServiceStatus } from '../../../constants'\nimport { DisplayTypes } from '../../../constants'\n\nexport type BadgeClick = (type: DisplayTypes, targetData: Station) => void\n\nconst ResultCard = (\n  { station, badgeClick }:\n  { station: Station, badgeClick: BadgeClick\n}) => {\n\n  return (\n    <ResultCardWrapper>\n      <ResultCardTitle lineLimit={1}>\n        {station.StationName.Zh_tw.split('_')[1]}\n      </ResultCardTitle>\n      <ResultCardContentWrapper>\n        <ResultCardBadge\n          data-type=\"rent\"\n          status={getStationStatusType(station.ServiceStatus, station.AvailableRentBikes)}\n          onClick={() => badgeClick(DisplayTypes.Bike, station)}\n        >\n          <BadgeTitle>\n            <i className=\"fas fa-bicycle\"></i>\n            可租借\n          </BadgeTitle>\n          <BadgeInfo>\n            {station.AvailableRentBikes}\n          </BadgeInfo>\n        </ResultCardBadge>\n        <ResultCardBadge\n          data-type=\"return\"\n          status={getStationStatusType(station.ServiceStatus, station.AvailableReturnBikes)}\n          onClick={() => badgeClick(DisplayTypes.Parking, station)}\n        >\n          <BadgeTitle>\n            <i className=\"fas fa-parking\"></i>\n            可停車\n          </BadgeTitle>\n          <BadgeInfo>\n            {station.AvailableReturnBikes}\n          </BadgeInfo>\n        </ResultCardBadge>\n      </ResultCardContentWrapper>\n      <ResultCardContentWrapper>\n        <ResultCardBorderTip>\n          {station.StationName.Zh_tw.split('_')[0]}\n        </ResultCardBorderTip>\n        <ResultCardTip>\n          <i className=\"fas fa-lightbulb\"></i>\n          {ServiceStatus[station.ServiceStatus]}\n        </ResultCardTip>\n      </ResultCardContentWrapper>\n    </ResultCardWrapper>\n  )\n}\n\nexport default ResultCard\n","import React, { useState } from 'react'\nimport { useMap } from 'react-leaflet'\nimport { SearchListWrapper, SearchListUnfoldButton, SearchBar, SearchResultListWrapper, SearchInputWrapper, SearchInput, SearchButton, SearchSelect } from './styled'\nimport availableCities from '../../constants/availableCities'\nimport { RootState, AppDispatch } from '../../store'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { stationRequestAction } from '../../store/station'\nimport { displayTypeUpdateAction } from '../../store/displayType'\nimport ResultCard, { BadgeClick } from './ResultCard'\n\nconst SearchList = (\n  { openSearchList, unfoldButtonClick }:\n  { openSearchList: boolean, unfoldButtonClick: React.Dispatch<React.SetStateAction<boolean>>\n}) => {\n  const map = useMap()\n  const dispatch = useDispatch<AppDispatch>()\n  const { type } = useSelector(\n    (state: RootState) => state.displayType\n  )\n  const { pedding, data, error } = useSelector(\n    (state: RootState) => state.station\n  )\n  const [keyword, setKeyword] = useState('')\n  const [city, setCity] = useState(availableCities[0].City)\n\n  const submitSearch = (keyword: string, city: string) => {\n    dispatch(stationRequestAction({ keyword, city }))\n  }\n\n  const badgeClickHandler: BadgeClick = (targetType, targetData) => {\n    if (type !== targetType) {\n      dispatch(displayTypeUpdateAction({ type: targetType }))\n    }\n    map.flyTo([targetData.StationPosition.PositionLat, targetData.StationPosition.PositionLon], 18, { animate: false })\n  }\n\n  return (\n    <SearchListWrapper isUnfold={openSearchList}>\n      <SearchListUnfoldButton\n        onClick={() => unfoldButtonClick(!openSearchList)}\n      >\n        {openSearchList ? (\n          <i className=\"fas fa-angle-down\"></i>\n        ) : (\n          <i className=\"fas fa-angle-up\"></i>\n        )}\n      </SearchListUnfoldButton>\n      <SearchBar>\n        <SearchSelect onChange={e => setCity(e.target.value)}>\n          {availableCities.map(city => (\n            <option key={city.City} value={city.City}>{city.CityName}</option>\n          ))}\n        </SearchSelect>\n        <SearchInputWrapper>\n          <SearchInput\n            type=\"text\"\n            value={keyword}\n            placeholder=\"搜尋站點\"\n            onChange={e => setKeyword(e.target.value)} \n            onKeyPress={e => {\n              if (e.key === 'Enter') {\n                submitSearch(keyword, city)\n              }\n            }}\n          />\n          <SearchButton>\n            <i className=\"fas fa-search\"></i>\n          </SearchButton>\n        </SearchInputWrapper>\n      </SearchBar>\n      <SearchResultListWrapper>\n        {pedding && (\n          <h1>Loading</h1>\n        )}\n        {error && (\n          <h1>伺服器錯誤</h1>\n        )}\n        {!pedding && !error && (data.length > 0 ? (\n          data.map(station => (\n            <ResultCard\n              key={station.StationID}\n              station={station}\n              badgeClick={badgeClickHandler}\n            />\n          ))) : (\n          <div>無搜尋結果</div>\n        ))}\n      </SearchResultListWrapper>\n    </SearchListWrapper>\n  )\n}\n\nexport default SearchList","import styled from 'styled-components'\nimport { shawdowCss, rotateAnimation } from '../../styles/helper'\nimport breakpoint from '../../styles/breakpoint'\n\nexport const PositionButtonWrapper = styled.button<{\n  active: boolean,\n  locating: boolean,\n  openSearchList: boolean\n}>`\n  position: absolute;\n  right: 28px;\n  bottom: ${props => props.openSearchList ? 'calc(300px + 12px)' : 'calc(70px + 12px)'};\n  width: 40px;\n  height: 40px;\n  border-radius: 100%;\n  background-color: ${props => props.active ? props.theme.colors.primary[400] : props.theme.colors.grey[300]};\n  color: ${props => props.theme.colors.grey[100]};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 402; // In order to biger than Map's z-index\n  font-size: 20px;\n  ${shawdowCss}\n  ${props => props.locating ? rotateAnimation : ''}\n  transition: bottom 0.3s linear;\n\n  &:hover {\n    border: 3px solid ${props => props.theme.colors.primary[500]};\n  }\n\n  ${breakpoint('md')`\n    top: 36px;\n    bottom: auto;\n    right: calc(50% - 30px);\n    font-size: 30px;\n    width: 60px;\n    height: 60px;\n  `}\n`","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport type GeolocationInitialState = {\n  position: [number, number] | null\n}\n\nconst initialState: GeolocationInitialState = {\n  position: null\n}\n\nexport type UpdatePayload = {\n  position: [number, number]\n}\n\nexport const geolocationSlice = createSlice({\n  name: 'geolocation',\n  initialState,\n  reducers: {\n    update: (state, action: PayloadAction<UpdatePayload>) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.position = action.payload.position\n    },\n    reset: state => {\n      state.position = null\n    }\n  }\n})\n\nexport const { update: geolocationUpdateAction, reset: geolocationResetAction } = geolocationSlice.actions\n\nexport default geolocationSlice.reducer","import { useState } from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport { PositionButtonWrapper } from './styled'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState, AppDispatch } from '../../store'\nimport { geolocationUpdateAction, geolocationResetAction } from '../../store/geolocation'\nimport { stationRequestAction } from '../../store/station'\n\nconst PositionButton = ({ openSearchList }: { openSearchList: boolean }) => {\n  const [watchPositionId, setWatchPositionId] = useState<number | null>(null)\n  const [locating, setLocating] = useState(false)\n  const dispatch = useDispatch<AppDispatch>()\n  const position = useSelector(\n    (state: RootState) => state.geolocation.position\n  )\n\n  const positionHandler = () => {\n    if ('geolocation' in navigator) {\n      if (position) {\n        // stopWatchPositionAndReset()\n        dispatch(stationRequestAction({ position }))\n      } else {\n        watchPositionAndUpdate()\n      }\n    } else {\n      alert('Geolocation is not supported by your browser')\n    }\n  }\n\n  const watchPositionAndUpdate = () => {\n    setLocating(true)\n    const watchId = navigator.geolocation.watchPosition(position => {\n      dispatch(geolocationUpdateAction({\n        position: [position.coords.latitude, position.coords.longitude]\n      }))\n      setLocating(false)\n    }, error => {\n      alert('Unable to retrieve your location')\n      setLocating(false)\n    })\n    setWatchPositionId(watchId)\n  }\n\n  // const stopWatchPositionAndReset = () => {\n  //   if (watchPositionId) {\n  //     navigator.geolocation.clearWatch(watchPositionId)\n  //     dispatch(geolocationResetAction())\n  //   }\n  // }\n\n  return (\n    <>\n      <PositionButtonWrapper\n        openSearchList={openSearchList}\n        data-tip\n        data-for=\"postitionButton\"\n        active={!!position}\n        locating={locating}\n        onClick={() => positionHandler()}\n      >\n        <i className=\"fas fa-crosshairs\"></i>\n      </PositionButtonWrapper>\n      <ReactTooltip id='postitionButton' place=\"right\" type=\"dark\" effect=\"solid\">\n        搜尋附近\n      </ReactTooltip>\n    </>\n  )\n}\n\nexport default PositionButton","import styled from 'styled-components'\nimport { shawdowCss } from '../../styles/helper'\nimport breakpoint from '../../styles/breakpoint'\n\nexport const ToggleDisplayButtonWrapper = styled.div`\n  position: absolute;\n  padding: 4px 6px;\n  top: 20px;\n  right: calc(50% - 100px);\n  width: 200px;\n  height: 36px;\n  cursor: pointer;\n  z-index: 402; // In order to biger than Map's z-index\n  ${shawdowCss}\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${props => props.theme.colors.grey[100]};\n  border-radius: 999px;\n\n  ${breakpoint('md')`\n    width: 280px;\n    height: 60px;\n    padding: 8px 12px;\n    top: calc(36px + 60px + 12px);\n    right: calc(50% - 140px);\n  `}\n`\n\nexport const DisplayButton = styled.button<{ active?: boolean }>`\n  flex: 1 0 auto;\n  width: 50%;\n  height: 100%;\n  border-radius: 999px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${props => props.active ? props.theme.colors.grey[100] : props.theme.colors.primary[400]};\n  background-color: ${props => props.active ? props.theme.colors.primary[400] : props.theme.colors.grey[100]};\n  font-size: 14px;\n\n  & i {\n    margin-right: 8px;\n  }\n\n  ${breakpoint('md')`\n    font-size: 18px;\n  `}\n`","import { ToggleDisplayButtonWrapper, DisplayButton } from './styled'\nimport { RootState, AppDispatch } from '../../store'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { displayTypeUpdateAction } from '../../store/displayType'\nimport { DisplayTypes } from '../../constants'\n\nconst ToggleDisplayButton = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { type } = useSelector(\n    (state: RootState) => state.displayType\n  )\n\n  const toggleDisplayTypeHandler = (value: DisplayTypes) => {\n    if (type === value) return\n    dispatch(displayTypeUpdateAction({ type: value }))\n  }\n\n  return (\n    <ToggleDisplayButtonWrapper>\n      <DisplayButton active={type === DisplayTypes.Bike} onClick={() => toggleDisplayTypeHandler(DisplayTypes.Bike)}>\n        <i className=\"fas fa-bicycle\"></i>\n        找單車\n      </DisplayButton>\n      <DisplayButton active={type === DisplayTypes.Parking} onClick={() => toggleDisplayTypeHandler(DisplayTypes.Parking)}>\n        <i className=\"fas fa-parking\"></i>\n        找車位\n      </DisplayButton>\n    </ToggleDisplayButtonWrapper>\n  )\n}\n\nexport default ToggleDisplayButton","import { useCallback, useEffect, useRef, useState } from 'react'\nimport SearchList from '../SearchList'\nimport PositionButton from '../PositionButton'\nimport ToggleDisplayButton from '../ToggleDisplayButton'\nimport L from 'leaflet'\n\nconst Layout = () => {\n  const domRef = useRef(null)\n  const [openSearchList, setOpenSearchList] = useState(false)\n\n  const disableEventPropagation = useCallback(() => {\n    if (domRef.current) {\n      L.DomEvent.disableClickPropagation(domRef.current);\n      L.DomEvent.disableScrollPropagation(domRef.current)\n    } else {\n      setTimeout(() => {\n        disableEventPropagation()\n      }, 100)\n    }\n  }, [])\n\n  useEffect(() => {\n    disableEventPropagation()\n  }, [disableEventPropagation])\n\n  return (\n    <div ref={domRef}>\n      <SearchList\n        openSearchList={openSearchList}\n        unfoldButtonClick={setOpenSearchList}\n      />\n      <ToggleDisplayButton />\n      <PositionButton openSearchList={openSearchList}/>\n    </div>\n  )\n}\n\nexport default Layout","import styled from 'styled-components'\n\nexport const TooltipContentWrapper = styled.div`\n  color: ${props => props.theme.colors.grey[100]};\n  padding: 4px 12px;\n  font-size: 14px;\n`","export default __webpack_public_path__ + \"static/media/dribbble-unscreen.04671d5f.gif\";","import { Marker as LeafMarker, Tooltip } from 'react-leaflet'\nimport { TooltipContentWrapper } from './styled'\nimport L from 'leaflet'\n// import userPositionSvg from '../../../assets/images/user-position.svg'\nimport userPositionSvg from '../../../assets/images/dribbble-unscreen.gif'\n\nconst userPositionIcon = new (L.icon as any)({\n  iconUrl: userPositionSvg,\n  iconSize: [120, 90],\n  iconAnchor: [60, 45],\n  popupAnchor: [1, -90]\n})\n\nconst PositionMarker = ({ position }: { position: [number, number] }) => {\n  return (\n    <LeafMarker\n      data-tip\n      data-for=\"postitionMarker\"\n      icon={userPositionIcon}\n      position={position}\n    >\n      <Tooltip offset={[20, 0]}>\n        <TooltipContentWrapper>\n          現在位置\n        </TooltipContentWrapper>\n      </Tooltip>\n    </LeafMarker>\n  )\n}\n\nexport default PositionMarker","const theme = {\n  layout: {\n    headerHeight: {\n      default: '36px',\n      md: '75px'\n    }\n  },\n  typography: {\n    h1: '45px',\n    h2: '36px',\n    h3: '32px',\n    h4: '36px',\n    h5: '22px',\n    content: '18px',\n    button: '15px',\n    caption: '12px'\n  },\n  colors: {\n    primary: {\n      100: '#DFE4CE',\n      200: '#CBD3B0',\n      300: '#A4B375',\n      400: '#738047',\n      500: '#474F2C',\n      600: '#292E19'\n    },\n    accent: {\n      100: '#FAF0E5',\n      200: '#F5DFC6',\n      300: '#EABD8A',\n      400: '#DE994A',\n      500: '#C67A24',\n      600: '#A3651E'\n    },\n    alert: {\n      100: '#F7D4DD',\n      200: '#F1B2C1',\n      300: '#F27594',\n      400: '#E75578',\n      500: '#BC3253',\n      600: '#8C3046'\n    },\n    grey: {\n      100: '#FFFFFF',\n      200: '#EEEEEE',\n      300: '#C5C5C5',\n      400: '#9A9A9A',\n      500: '#767676',\n      600: '#464646',\n      700: '#222222'\n    }\n  }\n}\n\nexport default theme","import styled from 'styled-components'\n\nexport const SvgText = styled.text<{ color: string, isOverTen: boolean }>`\n  fill: ${props => props.color};\n  font-size:24px;\n  font-weight: bold;\n  transform: ${props => props.isOverTen ? 'translateX(-14px)' : 'translateX(-7px)'};\n`","import { useMemo } from 'react'\nimport { StationStatus } from '../../../../constants'\nimport theme from '../../../../styles/theme'\nimport { lighten } from 'polished'\nimport { SvgText } from './styled'\n\nconst StationIcon = ({ status, quantity }: { status: StationStatus, quantity: number }) => {\n  const pathColor = useMemo(() => {\n    return status === StationStatus.Default ? theme.colors.primary[400]\n      : status === StationStatus.Limited ? theme.colors.alert[400]\n      : theme.colors.grey[400]\n  }, [status])\n\n  const ellipseColor = useMemo(() => {\n    return status === StationStatus.Default ? lighten(0.2, theme.colors.primary[400])\n      : status === StationStatus.Limited ? lighten(0.2, theme.colors.alert[400])\n      : lighten(0.2, theme.colors.grey[400])\n  }, [status])\n\n  return (\n    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 58 77\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <ellipse cx=\"29\" cy=\"72.5\" rx=\"15\" ry=\"4.5\" fill={ellipseColor}/>\n      <path d=\"M28.8003 0C12.9207 0 0.000293201 12.9204 0.000293201 28.782C-0.104107 51.984 27.7059 71.2224 28.8003 72C28.8003 72 57.7047 51.984 57.6003 28.8C57.6003 12.9204 44.6799 0 28.8003 0ZM28.8003 43.2C20.8443 43.2 14.4003 36.756 14.4003 28.8C14.4003 20.844 20.8443 14.4 28.8003 14.4C36.7563 14.4 43.2003 20.844 43.2003 28.8C43.2003 36.756 36.7563 43.2 28.8003 43.2Z\" fill={pathColor}/>\n      <circle cx=\"29\" cy=\"29\" r=\"19\" fill=\"#fff\"/>\n      <SvgText x=\"50%\" y=\"47%\" color={pathColor} isOverTen={quantity >= 10}>\n        { quantity }\n      </SvgText>\n    </svg>\n  )\n}\n\nexport default StationIcon","import styled from 'styled-components'\nimport { stationStatusCss } from '../../../../styles/helper'\nimport breakpoint from '../../../../styles/breakpoint'\n\nexport const StationPopupTitle = styled.h1`\n  font-weight: 700;\n  font-size: 15px;\n  line-height: 1.3;\n  color: ${props => props.theme.colors.primary[500]};\n\n  ${breakpoint('md')`\n    font-size: 18px;\n    line-height: 1.5;\n  `}\n`\n\nexport const StationPopupInfo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  &:nth-child(n+2) {\n    margin-top: 8px;\n  }\n`\n\nexport const StationPopupStatus = styled.span`\n  color: ${props => props.theme.colors.grey[500]};\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 20px;\n\n  & i {\n    margin-right: 6px;\n  }\n`\n\nexport const StationPopupBadgeWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const StationPopupBadge = styled.span`\n  ${stationStatusCss}\n  font-size: 15px;\n  font-weight: 700;\n  line-height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: auto;\n  height: auto;\n  padding: 1px 6px;\n  border-radius: 4px;\n\n  & i {\n    margin-right: 8px;\n  }\n\n  &:nth-child(n+2) {\n    margin-left: 12px;\n  }\n\n  ${breakpoint('md')`\n    width: 70px;\n    height: 30px;\n    padding: 0 12px;\n  `}\n`","import { Popup } from 'react-leaflet'\nimport { Station } from '../../../../store/station'\nimport { StationPopupTitle, StationPopupInfo, StationPopupStatus, StationPopupBadgeWrapper, StationPopupBadge } from './styled'\nimport { ServiceStatus } from '../../../../constants'\nimport { getStationStatusType } from '../../../../utils/status'\nimport useBreakpoint from '../../../../hooks/useBreakpoint'\n\nconst StationPopup = ({ station }: { station: Station }) => {\n  const isMdBp = useBreakpoint('md')\n\n  return (\n    <Popup closeButton={false} minWidth={isMdBp ? 350 : 270} maxHeight={isMdBp ? 100 : 75}>\n      <StationPopupInfo>\n        <StationPopupTitle>{station.StationName.Zh_tw.split('_')[1]}</StationPopupTitle>\n        <StationPopupStatus>{station.StationName.Zh_tw.split('_')[0]}</StationPopupStatus>\n      </StationPopupInfo>\n      <StationPopupInfo>\n        <StationPopupBadgeWrapper>\n          <StationPopupBadge\n            status={getStationStatusType(station.ServiceStatus, station.AvailableRentBikes)}\n          >\n            <i className=\"fas fa-bicycle\"></i>\n            {station.AvailableRentBikes}\n          </StationPopupBadge>\n          <StationPopupBadge\n            status={getStationStatusType(station.ServiceStatus, station.AvailableReturnBikes)}\n          >\n            <i className=\"fas fa-parking\"></i>\n            {station.AvailableReturnBikes}\n          </StationPopupBadge>\n        </StationPopupBadgeWrapper>\n        <StationPopupStatus>\n          <i className=\"fas fa-lightbulb\"></i>\n          {ServiceStatus[station.ServiceStatus]}\n        </StationPopupStatus>\n      </StationPopupInfo>\n    </Popup>\n  )\n}\n\nexport default StationPopup","import { useMemo } from 'react'\nimport { Marker as LeafMarker } from 'react-leaflet'\nimport { Station } from '../../../store/station'\nimport L from 'leaflet'\nimport { DisplayTypes } from '../../../constants'\nimport StationIcon from './StationIcon'\nimport ReactDOMServer from 'react-dom/server'\nimport { StationStatus } from '../../../constants'\nimport { useMap } from 'react-leaflet'\nimport StationPopup from './StationPopup'\nimport { getStationStatusType } from '../../../utils/status'\nimport useBreakpoint from '../../../hooks/useBreakpoint'\n\nconst generateStationIcon = (status: StationStatus, quantity: number, isMdbp: boolean) => {\n  return L.divIcon({\n    iconSize: [45, 60],\n    iconAnchor: [22.5, 30],\n    popupAnchor: isMdbp ? [175, 140] : [0, -25],\n    html: ReactDOMServer.renderToString(<StationIcon status={status} quantity={quantity} />)\n  })\n}\n\nconst StationMarker = ({ station, type }: { station: Station, type: DisplayTypes }) => {\n  const map = useMap()\n  const isMdbp = useBreakpoint('md')\n\n  const displayIcon = useMemo(() => {\n    if (station.ServiceStatus !== 1) return generateStationIcon(StationStatus.Disabled, 0, isMdbp)\n    return generateStationIcon(\n      getStationStatusType(station.ServiceStatus, type === DisplayTypes.Bike ? station.AvailableRentBikes : station.AvailableReturnBikes),\n      type === DisplayTypes.Bike ? station.AvailableRentBikes : station.AvailableReturnBikes,\n      isMdbp\n    )\n  }, [station.AvailableRentBikes, station.AvailableReturnBikes, station.ServiceStatus, type, isMdbp])\n\n  return (\n    <LeafMarker\n      icon={displayIcon}\n      position={[station.StationPosition.PositionLat, station.StationPosition.PositionLon]}\n      eventHandlers={{\n        click: () => {\n          map.flyTo([station.StationPosition.PositionLat, station.StationPosition.PositionLon], 18)\n        }\n      }}\n    >\n      <StationPopup station={station} />\n    </LeafMarker>\n  )\n}\n\nexport default StationMarker","import PositionMarker from './PositionMarker'\nimport StationMarker from './StationMarker'\n\nconst Markers = {\n  PositionMarker,\n  StationMarker\n}\n\nexport default Markers","\nimport { useEffect, useRef, useState } from 'react'\nimport { MapContainer as Map, TileLayer } from 'react-leaflet'\nimport { Map as LeafletMap } from 'leaflet'\nimport { Routes as RouterRoutes, Route, Navigate } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState, AppDispatch } from '../../store'\nimport { stationRequestAction } from '../../store/station'\nimport { Routes } from '../../constants/routes'\nimport { GeolocationInitialState } from '../../store/geolocation'\nimport Layout from '../Layout'\nimport Markers from '../Marks'\n\nconst MapContainer = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const positionHistory = useRef<GeolocationInitialState['position']>(null)\n  const [map, setMap] = useState<LeafletMap | null>(null)\n  const { data } = useSelector(\n    (state: RootState) => state.station\n  )\n  const position = useSelector(\n    (state: RootState) => state.geolocation.position\n  )\n  const { type } = useSelector(\n    (state: RootState) => state.displayType\n  )\n\n  useEffect(() => {\n    if (data.length > 0 && map) {\n      map.flyTo([data[0].StationPosition.PositionLat, data[0].StationPosition.PositionLon], 18, { animate: false })\n    }\n  }, [data, map])\n\n  useEffect(() => {\n    if (\n      positionHistory.current === null\n      && position\n      && map\n    ) {\n      dispatch(stationRequestAction({ position }))\n      map.flyTo([position[0], position[1]], 18, { animate: false })\n    }\n    positionHistory.current = position\n  }, [position, map, dispatch])\n\n  return (\n    <Map\n      style={{ height: '100%', width: '100%' }}\n      center={[23.703875, 120.982024]}\n      zoom={8}\n      whenCreated={setMap}\n      scrollWheelZoom={true}\n      zoomControl={false}\n    >\n      <RouterRoutes>\n        <Route path=\"/\" element={<Navigate to={Routes.Bicycle} replace={true} />}></Route>\n        <Route path={Routes.Bicycle} element={<Layout />}></Route>\n        <Route path={Routes.Routes} element={<div>Routes</div>}></Route>\n        {/* <Route path=\"*\" element={<ProblemPlaceholder problem={Problems.PageNotFound}/>} /> */}\n      </RouterRoutes>\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://a.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n      />\n      {position && (\n        <Markers.PositionMarker position={position} />\n      )}\n      {data.map(station => (\n        <Markers.StationMarker\n          type={type}\n          key={station.StationID}\n          station={station}\n        />\n      ))}\n    </Map>\n  )\n}\n\nexport default MapContainer","import styled from 'styled-components'\nimport breakpoint from './styles/breakpoint'\nimport { BrowserRouter } from 'react-router-dom'\nimport Header from './components/Header'\nimport MapContainer from './components/MapContainer'\n\nconst AppContent = styled.div`\n  position: relative;\n  width: 100vw;\n  height: calc(100vh - ${props => props.theme.layout.headerHeight.default});\n\n  ${breakpoint('md')`\n    height: calc(100vh - ${props => props.theme.layout.headerHeight.md});\n  `}\n`\n\nconst App = () => {\n  return (\n    <BrowserRouter basename={process.env.REACT_APP_GITHUB_PAGE_PATH}>\n      <Header />\n      <AppContent>\n        <MapContainer />\n      </AppContent>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import { combineReducers } from 'redux'\nimport stationReducer from './station'\nimport geolocationReducer from './geolocation'\nimport displayTypeReducer from './displayType'\n\nconst rootReducer = combineReducers({\n  station: stationReducer,\n  geolocation: geolocationReducer,\n  displayType: displayTypeReducer\n})\n\nexport default rootReducer","import axios from 'axios'\nimport jsSHA from 'jssha'\n\n/**************************************************/\n/******** For TDX api authorization header ********/\n/**************************************************/\n\nexport const getAuthorizationHeader = () => {\n  const UTCTime = new Date().toUTCString()\n  const ShaObj = new jsSHA('SHA-1', 'TEXT')\n  ShaObj.setHMACKey(process.env.REACT_APP_TDX_APP_KEY || '', 'TEXT')\n  ShaObj.update('x-date: ' + UTCTime)\n  const HMAC = ShaObj.getHMAC('B64')\n  const Authorization = `\n    hmac username=\"${process.env.REACT_APP_TDX_APP_ID}\", algorithm=\"hmac-sha1\", headers=\"x-date\", signature=\"${HMAC}\"\n  `\n  return {\n    Authorization,\n    'X-Date': UTCTime\n  }\n}\n\n/***********************************************/\n/******** https://tdx.transportdata.tw/ ********/\n/***********************************************/\n\nexport const tdxAPI = axios.create({\n  baseURL: process.env.REACT_APP_TDX_API_URL\n})\n\n/***************************************/\n/******** For TDX api parameter ********/\n/***************************************/\n\nexport type GeneralParameter = {\n  $format?: 'JSON' | 'XML'\n}\n\nexport type FetchPageParameter = {\n  $top?: number\n  $skip?: number\n}\n\nexport type SearchByCityParameter = {\n  $filter: ReturnType<TransformKeysToFilter>\n  city: string\n}\n\nexport type NearByParameter = {\n  $spatialFilter: ReturnType<TransfromPositionToSpatialFilter>\n  $filter: ReturnType<TransformKeysToFilter>\n}\n\n/*********************************************/\n/******** Format special query string ********/\n/*********************************************/\n\ntype TransformKeysToFilter = (\n  required?: string[],\n  searchs?: {\n    keyword: string,\n    searchFields: string[]\n  }[]\n) => string\n\nexport const transformKeysToFilter: TransformKeysToFilter = (required = [], searchs = []) => {\n  const requiredFilter = required.map(key => key + ' ne null').join(' and ')\n  const searchFilter = searchs.map(search => `(${search.searchFields.map(field => `contains(${field}, '${search.keyword}')`).join(' or ')})`).join(' and ')\n  return [requiredFilter, searchFilter].filter(filter => filter).join(' and ')\n}\n\ntype TransfromPositionToSpatialFilter = (\n  position: [number, number], // [Lat, Lon]\n  range?: number\n) => string\n\nexport const transfromPositionToSpatialFilter: TransfromPositionToSpatialFilter = (position, range = 1000) =>\n  `nearby(${position[0]},${position[1]},${range})`\n\n/***********************/\n/******** Unuse ********/\n/***********************/\n\n// export const fetchRequest = <T>(url: string): Promise<T> => {\n//   return fetch(url)\n//     .then(response => {\n//       if (!response.ok) {\n//         throw new Error(response.statusText)\n//       }\n//       return response.json().then(data => data as T);\n//     })          \n// }\n","import { tdxAPI, getAuthorizationHeader, GeneralParameter, SearchByCityParameter, NearByParameter } from '..'\n\nexport const stationRequired = ['StationID', 'StationName/Zh_tw', 'StationPosition/PositionLon', 'StationPosition/PositionLat']\nexport const stationSearchFields = ['StationName/Zh_tw', 'StationAddress/Zh_tw']\n\nexport const fetchBikeStationByCity = (\n  {\n    $format = 'JSON',\n    $filter,\n    city\n  } : GeneralParameter & SearchByCityParameter\n) => {\n  return tdxAPI.get(\n    `/v2/Bike/Station/${city}`,\n    {\n      headers: getAuthorizationHeader(),\n      params: {\n        $format,\n        $filter\n      }\n    }\n  )\n}\n\nexport const fetchBikeStationNearBy = (\n  {\n    $format = 'JSON',\n    $spatialFilter,\n    $filter\n  } : GeneralParameter & NearByParameter\n) => {\n  return tdxAPI.get(\n    `/v2/Bike/Station/NearBy`,\n    {\n      headers: getAuthorizationHeader(),\n      params: {\n        $format,\n        $spatialFilter,\n        $filter\n      }\n    }\n  )\n}","import { tdxAPI, getAuthorizationHeader, GeneralParameter, SearchByCityParameter, NearByParameter } from '..'\n\nexport const availabilityRequired = ['StationID', 'ServiceStatus', 'AvailableRentBikes', 'AvailableReturnBikes']\n\nexport const fetchAvailabilityStationByCity = (\n  {\n    $format = 'JSON',\n    $filter,\n    city\n  } : GeneralParameter & SearchByCityParameter\n) => {\n  return tdxAPI.get(\n    `/v2/Bike/Availability/${city}`,\n    {\n      headers: getAuthorizationHeader(),\n      params: {\n        $format,\n        $filter\n      }\n    }\n  )\n}\n\nexport const fetchAvailabilityStationNearBy = (\n  {\n    $format = 'JSON',\n    $spatialFilter\n  } : GeneralParameter & NearByParameter\n) => {\n  return tdxAPI.get(\n    `/v2/Bike/Availability/NearBy`,\n    {\n      headers: getAuthorizationHeader(),\n      params: {\n        $format,\n        $spatialFilter\n      }\n    }\n  )\n}","import { call, put, takeLatest } from 'redux-saga/effects'\nimport { BikeStation, BikeAvailability } from '../../utils/api/types'\nimport { PayloadAction } from '@reduxjs/toolkit'\nimport { stationRequestAction, stationSuccessAction, stationFailureAction, RequestPayload, NearByRequestPayload } from '.'\nimport { fetchBikeStationByCity, fetchBikeStationNearBy, stationRequired, stationSearchFields } from '../../utils/api/station'\nimport { fetchAvailabilityStationByCity, fetchAvailabilityStationNearBy, availabilityRequired } from '../../utils/api/availability'\nimport { transformKeysToFilter, transfromPositionToSpatialFilter } from '../../utils/api'\n\nfunction* fetchStationSaga({ payload }: PayloadAction<RequestPayload | NearByRequestPayload>) {\n  try {\n    let stationResponse: { data: BikeStation[] }\n    let availabilityResponse: { data: BikeAvailability[] }\n\n    if ('position' in payload) {\n      stationResponse = yield call(fetchBikeStationNearBy, {\n        $filter: transformKeysToFilter(stationRequired),\n        $spatialFilter: transfromPositionToSpatialFilter(payload.position)\n      })\n      availabilityResponse = yield call(fetchAvailabilityStationNearBy, {\n        $filter: transformKeysToFilter(availabilityRequired),\n        $spatialFilter: transfromPositionToSpatialFilter(payload.position)\n      })\n    } else {\n      const { keyword, city } = payload\n      stationResponse = yield call(fetchBikeStationByCity, {\n        $filter: transformKeysToFilter(stationRequired, [{ keyword, searchFields: stationSearchFields }]),\n        city\n      })\n      availabilityResponse = yield call(fetchAvailabilityStationByCity, {\n        $filter: transformKeysToFilter(availabilityRequired), city\n      })\n    }\n\n    const data = stationResponse.data.reduce((result, station) => {\n      const index = availabilityResponse.data.findIndex(availability => availability.StationID === station.StationID)\n      if (index > -1) {\n        result.push(Object.assign(station, availabilityResponse.data[index]))\n      }\n      return result\n    }, [] as (BikeStation & BikeAvailability)[])\n\n    yield put(\n      stationSuccessAction({\n        data\n      })\n    )\n  } catch (error: any) {\n    yield put(\n      stationFailureAction({\n        error\n      })\n    )\n  }\n}\n\nfunction* stationSaga() {\n  yield takeLatest(stationRequestAction, fetchStationSaga)\n}\n\n/**** use take effect case  ****/\n// function* stationSaga() {\n//   while (true) {\n//     const payload: PayloadAction<RequestPayload> = yield take(stationRequestAction)\n//     yield fork(fetchStationSaga, payload)\n//   }\n// }\n\nexport default stationSaga","import { all, fork } from 'redux-saga/effects'\nimport stationSaga from './station/saga'\n\nexport default function* rootSaga() {\n  yield all([\n    fork(stationSaga)\n  ])\n}","import { configureStore } from '@reduxjs/toolkit'\nimport createSagaMiddleware from '@redux-saga/core'\nimport rootReducer from './reducers'\nimport rootSaga from './sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(sagaMiddleware),\n  devTools: process.env.NODE_ENV !== 'production'\n})\n\nsagaMiddleware.run(rootSaga)\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\nexport default store","import { createGlobalStyle } from 'styled-components'\nimport theme from './theme'\n\nexport default createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n  html {\n    line-height: 1.15;\n    -webkit-text-size-adjust: 100%;\n  }\n  body {\n    margin: 0;\n  }\n  main {\n    display: block;\n  }\n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n  h1, h2, h3, h4, h5, h6, p {\n    margin: 0;\n    font-weight: normal;\n  }\n  hr {\n    box-sizing: content-box;\n    height: 0;\n    overflow: visible;\n  }\n  pre {\n    font-family: monospace, monospace;\n    font-size: 1em;\n  }\n  a {\n    background-color: transparent;\n  }\n  a:visited {\n    color: inherit;\n  }\n  a:-webkit-any-link {\n    color: inherit;\n  }\n  abbr[title] {\n    border-bottom: none;\n    text-decoration: underline;\n    text-decoration: underline dotted;\n  }\n  b,\n  strong {\n    font-weight: bolder;\n  }\n  code,\n  kbd,\n  samp {\n    font-family: monospace, monospace;\n    font-size: 1em;\n  }\n  small {\n    font-size: 80%;\n  }\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  sup {\n    top: -0.5em;\n  }\n  img {\n    border-style: none;\n  }\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit;\n    font-size: 100%;\n    line-height: 1.15;\n    margin: 0;\n    border:none;\n    background-image:none;\n    background-color:transparent;\n    box-shadow: none;\n    color: inherit;\n  }\n  button,\n  input {\n    overflow: visible;\n  }\n  input {\n    outline: none;\n  }\n  button,\n  select {\n    text-transform: none;\n    outline: none;\n  }\n  button,\n  [type=\"button\"],\n  [type=\"reset\"],\n  [type=\"submit\"] {\n    -webkit-appearance: button;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n  }\n  button::-moz-focus-inner,\n  [type=\"button\"]::-moz-focus-inner,\n  [type=\"reset\"]::-moz-focus-inner,\n  [type=\"submit\"]::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n  button:-moz-focusring,\n  [type=\"button\"]:-moz-focusring,\n  [type=\"reset\"]:-moz-focusring,\n  [type=\"submit\"]:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n  fieldset {\n    padding: 0.35em 0.75em 0.625em;\n  }\n  legend {\n    box-sizing: border-box;\n    color: inherit;\n    display: table;\n    max-width: 100%;\n    padding: 0;\n    white-space: normal;\n  }\n  progress {\n    vertical-align: baseline;\n  }\n  textarea {\n    overflow: auto;\n  }\n  [type=\"checkbox\"],\n  [type=\"radio\"] {\n    box-sizing: border-box;\n    padding: 0;\n  }\n  [type=\"number\"]::-webkit-inner-spin-button,\n  [type=\"number\"]::-webkit-outer-spin-button {\n    height: auto;\n  }\n  [type=\"search\"] {\n    -webkit-appearance: textfield;\n    outline-offset: -2px;\n  }\n  [type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  ::-webkit-file-upload-button {\n    -webkit-appearance: button;\n    font: inherit;\n  }\n  details {\n    display: block;\n  }\n  summary {\n    display: list-item;\n  }\n  template {\n    display: none;\n  }\n  [hidden] {\n    display: none;\n  }\n  .leaflet-tooltip {\n    background-color: ${theme.colors.grey[700]} !important;\n    border-color: ${theme.colors.grey[700]} !important;\n  }\n  .leaflet-tooltip-top:before {\n    border-top-color: ${theme.colors.grey[700]} !important;\n  }\n  .leaflet-tooltip-bottom:before {\n    border-bottom-color: ${theme.colors.grey[700]} !important;\n  }\n  .leaflet-tooltip-left:before {\n    border-left-color: ${theme.colors.grey[700]} !important;\n  }\n  .leaflet-tooltip-right:before {\n    border-right-color: ${theme.colors.grey[700]} !important;\n  }\n  .leaflet-popup-tip {\n    display: none;\n  }\n  .leaflet-div-icon {\n    background-color: transparent !important;\n    border: none !important;\n  }\n  .leaflet-popup-scrolled {\n    border: none !important;\n  }\n  .leaflet-bottom {\n    z-index: 401 !important;\n  }\n`","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport store from './store'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport theme from './styles/theme'\nimport ResetCss from './styles/resetCss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <ResetCss />\n        <App />\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}