{"version":3,"sources":["constants/routes.ts","styles/breakpoint.ts","components/Header/styled.ts","components/Navbar/styled.ts","components/Navbar/index.tsx","hooks/useBreakpoint/index.ts","constants/index.ts","containers/TransitionContainer/index.tsx","components/Header/index.tsx","store/station/index.ts","containers/DisableEventPropagationContainer/index.tsx","store/displayType/index.ts","styles/helper.ts","components/StationItem/styled.ts","utils/index.ts","components/StationItem/index.tsx","components/ProblemPlaceholder/style.ts","components/ProblemPlaceholder/index.tsx","components/LoadingPlaceholder/style.ts","components/LoadingPlaceholder/index.tsx","components/SearchList/styled.ts","constants/availableCities.ts","components/SearchList/index.tsx","components/PositionButton/styled.ts","store/geolocation/index.ts","components/PositionButton/index.tsx","components/ToggleDisplayButton/styled.ts","components/ToggleDisplayButton/index.tsx","containers/BicyclePage/index.tsx","components/RouteItem/styled.ts","components/RouteItem/index.tsx","store/route/index.ts","containers/RoutePage/index.tsx","styles/globalStyled.ts","assets/images/dribbble-unscreen.gif","components/Marks/PositionMarker/index.tsx","styles/theme.ts","components/Marks/StationMarker/StationIcon/styled.ts","components/Marks/StationMarker/StationIcon/index.tsx","components/Marks/StationMarker/StationPopup/styled.ts","components/Marks/StationMarker/StationPopup/index.tsx","components/Marks/StationMarker/index.tsx","components/Marks/index.tsx","components/Marks/RouteMarker/RouteIcon/styled.ts","components/Marks/RouteMarker/RouteIcon/index.tsx","components/Marks/RouteMarker/index.tsx","components/Marks/RouteSet/index.tsx","containers/MapContainer/index.tsx","App.tsx","store/reducers.ts","service/tdxApi/index.ts","service/tdxApi/station/index.ts","service/tdxApi/availability/index.ts","store/station/saga.ts","service/tdxApi/cyclingShape/index.ts","store/route/saga.ts","store/authSaga.ts","store/sagas.ts","store/index.ts","styles/resetCss.ts","index.tsx"],"names":["Routes","breakpoints","xs","sm","md","lg","xl","breakpoint","createBreakpoint","HeaderWrapper","styled","section","props","theme","layout","headerHeight","default","HeaderContent","div","colors","primary","LogoWrapper","img","MenuWrapper","button","grey","NavBarWrapper","nav","LinkContent","span","match","NavBar","location","useLocation","to","Bicycle","pathname","className","useBreakpoint","StationStatus","DisplayTypes","ServiceStatus","Problems","PositionButtonActions","bp","isMin","useMediaQuery","query","TransitionContainer","show","children","CSSTransition","in","timeout","classNames","unmountOnExit","Header","isMdBp","useState","showMenu","setShowMenu","useEffect","closeSearchList","document","addEventListener","removeEventListener","onClick","e","stopPropagation","src","alt","stationSlice","createSlice","name","initialState","pedding","data","error","reducers","request","state","action","success","payload","failure","clear","actions","stationRequestAction","stationSuccessAction","stationFailureAction","stationClearAction","DisableEventPropagationContainer","domRef","useRef","disableEventPropagation","useCallback","current","L","DomEvent","disableClickPropagation","disableScrollPropagation","setTimeout","ref","type","Bike","displayTypeSlice","update","displayTypeUpdateAction","shawdowCss","css","limitLineCss","lineLimit","rotate","keyframes","rotateAnimation","stationStatusCss","status","Default","Limited","alert","StationItemWrapper","li","StationItemTitle","h1","StationItemContentWrapper","StationItemBadge","BadgeTitle","BadgeInfo","StationItemTip","StationItemBorderTip","getStationStatusType","serviceStatus","availableBikes","Disabled","formatLength","value","baseUnit","StationItem","React","memo","station","badgeClick","StationName","Zh_tw","split","AvailableRentBikes","AvailableReturnBikes","Parking","ProblemWrapper","ProblemText","p","IconWrapper","ProblemPlaceholder","problem","NoResult","PageNotFound","Error","LoadingWrapper","ElementWrapper","LoadingPlaceholder","SearchListWrapper","isUnfold","SearchListUnfoldButton","SearchBar","SearchResultListWrapper","ul","SearchInputWrapper","SearchInput","input","SearchButton","SearchSelect","select","availableCities","SearchList","openSearchList","toggleSearchList","placeholderText","submitHandler","keyword","setKeyword","City","city","setCity","onChange","target","map","CityName","placeholder","onKeyPress","key","PositionButtonWrapper","active","locating","geolocationSlice","position","center","undefined","reset","geolocationUpdateAction","PositionButton","useMap","setWatchPositionId","setLocating","dispatch","useDispatch","useSelector","geolocation","watchPositionAndUpdate","watchId","navigator","watchPosition","coords","latitude","longitude","Search","flyTo","id","place","effect","ToggleDisplayButtonWrapper","DisplayButton","ToggleDisplayButton","displayType","toggleDisplayTypeHandler","BicyclePage","setOpenSearchList","badgeClickHandler","targetType","targetData","StationPosition","PositionLat","PositionLon","animate","length","StationID","RouteItemWrapper","RouteItemTitle","RouteItemCyclingContent","RouteItemCyclingText","RouteItemCyclingRoadSection","RouteItemCyclingTitle","RouteItemRow","RouteItemInfo","RouteItemDirection","RouteItem","route","itemOnClick","isActive","RouteName","RoadSectionStart","RoadSectionEnd","Direction","CyclingLength","routeSlice","setCurrent","routeRequestAction","routeSuccessAction","routeFailureAction","routeClearAction","routeSetCurrent","RoutePage","itemClickHandler","Locate","TooltipContentWrapper","userPositionIcon","icon","iconUrl","userPositionSvg","iconSize","iconAnchor","popupAnchor","PositionMarker","Tooltip","offset","typography","h2","h3","h4","h5","content","caption","accent","SvgText","text","color","isOverTen","StationIcon","quantity","pathColor","useMemo","ellipseColor","lighten","width","height","viewBox","fill","xmlns","cx","cy","rx","ry","d","r","x","y","StationPopupTitle","StationPopupInfo","StationPopupStatus","StationPopupBadgeWrapper","StationPopupBadge","StationPopup","Popup","closeButton","minWidth","maxHeight","generateStationIcon","isMdbp","divIcon","html","ReactDOMServer","renderToString","Markers","StationMarker","displayIcon","eventHandlers","click","BikeIcon","i","RouteIcon","RouteMarker","routeSection","RouteSet","polyline","polylineOption","weight","Polyline","pathOptions","positions","MapContainer","positionHistory","setMap","stations","currentRoute","test","window","style","zoom","whenCreated","scrollWheelZoom","zoomControl","path","element","replace","TileLayer","attribution","url","index","AppContent","App","basename","process","rootReducer","combineReducers","stationReducer","geolocationReducer","displayTypeReducer","routeReducer","wkt","Wkt","tdxAPI","axios","create","baseURL","transformKeysToFilter","required","searchs","requiredFilter","join","searchFilter","search","searchFields","field","filter","transfromPositionToSpatialFilter","range","formatBikeShape","routes","read","Geometry","toJson","coordinates","coor","Array","isArray","item","reverse","stationRequired","stationSearchFields","fetchBikeStationByCity","$format","$filter","get","params","fetchBikeStationNearBy","$spatialFilter","availabilityRequired","fetchAvailabilityStationByCity","fetchAvailabilityStationNearBy","fetchStationSaga","stationSaga","call","stationResponse","availabilityResponse","reduce","result","findIndex","availability","push","Object","assign","put","takeLatest","searchTownFields","fetchBikeCyclingShapByCity","fetchRouteSaga","routeSaga","sortedData","tdxAuthAPI","fetchAuthToken","Promise","resolve","reject","defaults","headers","common","URLSearchParams","append","post","then","res","access_token","catch","rootSaga","all","fork","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","devTools","run","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7eb8cab3.chunk.js","sourcesContent":["export enum Routes {\n  Bicycle = '/bicycle',\n  Routes = '/routes',\n  Scenics = '/scenics'\n}","import { createBreakpoint } from 'styled-components-breakpoint'\n\ntype Breakpoint = {\n  [bp: string]: number\n}\n\nexport const breakpoints: Breakpoint = {\n  xs: 0,\n  sm: 360,\n  md: 768,\n  lg: 1280,\n  xl: 1440\n}\n\nconst breakpoint = createBreakpoint(breakpoints)\n\nexport default breakpoint","import styled from 'styled-components'\nimport breakpoint from '../../styles/breakpoint'\n\nexport const HeaderWrapper = styled.section`\n  position: relative;\n  width: 100vw;\n  height: ${props => props.theme.layout.headerHeight.default};\n  text-align: center;\n\n  ${breakpoint('md')`\n    height: ${props => props.theme.layout.headerHeight.md};\n  `}\n`\n\nexport const HeaderContent = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  background-color: ${props => props.theme.colors.primary[400]};\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: ${props => props.theme.layout.headerHeight.default};\n  padding: 10px 20px;\n  z-index: 404;\n\n  ${breakpoint('md')`\n    position: static;\n    padding: 20px 72px;\n    height: ${props => props.theme.layout.headerHeight.md};\n  `}\n`\n\nexport const LogoWrapper = styled.img`\n  width: 105px;\n\n  ${breakpoint('md')`\n    width: 180px;\n  `}\n`\n\nexport const MenuWrapper = styled.button`\n  color: ${props => props.theme.colors.grey[100]};\n  cursor: pointer;\n`","import styled from 'styled-components'\nimport breakpoint from '../../styles/breakpoint'\n\nexport const NavBarWrapper = styled.nav`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  background-color: ${props => props.theme.colors.primary[100]};\n  padding: 8px 0;\n  color: ${props => props.theme.colors.primary[400]};\n  position: absolute;\n  top: 100%;\n  left: 0;\n  z-index: 403;\n\n  ${breakpoint('md')`\n    position: static;\n    width: auto;\n    background-color: transparent;\n  `}\n\n  & a {\n    text-decoration: none;\n    flex: 1 0 auto;\n\n    &:nth-child(1n+2) {\n      border-left: 1px solid ${props => props.theme.colors.primary[400]};\n\n      ${breakpoint('md')`\n        border-left: none;\n      `}\n    }\n  }\n\n`\n\nexport const LinkContent = styled.span`\n  text-align: center;\n  padding: 4px 0;\n  font-weight: 700;\n  font-size: 12px;\n  transition: background-color 0.2s linear;\n\n  ${breakpoint('md') <{ match: boolean }>`\n    display: inline-block;\n    background-color: ${props => props.match ? props.theme.colors.primary[100] : props.theme.colors.grey[100]};\n    border-radius: 8px;\n    box-shadow: 0 0 0 ${props => props.match ? '3' : '1'}px ${props => props.theme.colors.primary[300]};\n    padding: 8px 16px;\n    margin-left: 16px;\n    font-size: 16px;\n\n    &:hover {\n      box-shadow: 0 0 0 3px ${props => props.theme.colors.primary[300]};\n    }\n  `}\n\n  & i {\n    display: block;\n\n    ${breakpoint('md')`\n      display: inline-block;\n      margin-right: 4px;\n    `}\n  }\n`","import * as Styled from './styled'\nimport { Link, useLocation } from 'react-router-dom'\nimport { Routes } from '../../constants/routes'\n\nconst NavBar = () => {\n  const location = useLocation()\n\n  return (\n    <Styled.NavBarWrapper>\n      <Link to={Routes.Bicycle}>\n        <Styled.LinkContent match={location.pathname === Routes.Bicycle}>\n          <i className=\"fas fa-bicycle\"></i>\n          找單車\n        </Styled.LinkContent>\n      </Link>\n      <Link to={Routes.Routes}>\n        <Styled.LinkContent match={location.pathname === Routes.Routes}>\n          <i className=\"fas fa-route\"></i>\n          找路線\n        </Styled.LinkContent>\n      </Link>\n      {/* <Link to={Routes.Scenics}>\n        <LinkContent match={location.pathname === Routes.Scenics}>\n          <i className=\"fas fa-umbrella-beach\"></i>\n          找景點\n        </LinkContent>\n      </Link> */}\n    </Styled.NavBarWrapper>\n  )\n}\n\nexport default NavBar\n","import { useMediaQuery } from 'react-responsive'\nimport { breakpoints } from '../../styles/breakpoint'\n\nfunction useBreakpoint(bp: string, isMin: boolean = true) {\n  return useMediaQuery({ query: `(${isMin ? 'min-width' : 'max-width'}: ${breakpoints[bp]}px)` })\n}\n\nexport default useBreakpoint","export const AVAILABLE_LIMIT = 5\n\nexport enum StationStatus {\n  Limited = 'Limited',\n  Disabled = 'Disabled',\n  Default = 'Default'\n}\n\nexport enum DisplayTypes {\n  Bike = 'Bike',\n  Parking = 'Parking'\n}\n\nexport enum ServiceStatus {\n  '停止營運',\n  '正常營運',\n  '暫停營運'\n}\n\nexport enum Problems {\n  NoResult = 'NoResult',\n  PageNotFound = 'PageNotFound',\n  Error = 'Error'\n}\n\nexport enum PositionButtonActions {\n  Search,\n  Locate\n}","import React from 'react'\nimport { CSSTransition } from 'react-transition-group'\n\nimport './transition.css'\n\nconst TransitionContainer = ({\n  show,\n  children,\n}: {\n  show: boolean\n  children: React.ReactNode\n}) => {\n  return (\n    <CSSTransition in={show} timeout={300} classNames=\"fade\" unmountOnExit>\n      {children}\n    </CSSTransition>\n  )\n}\n\nexport default TransitionContainer\n","import * as Styled from './styled'\nimport NavBar from '../Navbar'\nimport useBreakpoint from '../../hooks/useBreakpoint'\nimport { useEffect, useState } from 'react'\nimport TransitionContainer from '../../containers/TransitionContainer'\n\nconst Header = () => {\n  const isMdBp = useBreakpoint('md')\n  const [showMenu, setShowMenu] = useState(false)\n\n  useEffect(() => {\n    const closeSearchList = () => {\n      setShowMenu(false)\n    }\n    document.addEventListener('click', closeSearchList)\n    return () => {\n      document.removeEventListener('click', closeSearchList)\n    }\n  }, [setShowMenu])\n\n  return (\n    <div\n      onClick={(e) => {\n        e.stopPropagation()\n      }}\n    >\n      <Styled.HeaderWrapper>\n        <Styled.HeaderContent>\n          <Styled.LogoWrapper src=\"./logo.png\" alt=\"logo\" />\n          {isMdBp ? (\n            <NavBar />\n          ) : (\n            <Styled.MenuWrapper onClick={() => setShowMenu(!showMenu)}>\n              <i className=\"fas fa-bars\"></i>\n            </Styled.MenuWrapper>\n          )}\n        </Styled.HeaderContent>\n        <TransitionContainer show={showMenu}>\n          <NavBar />\n        </TransitionContainer>\n      </Styled.HeaderWrapper>\n    </div>\n  )\n}\n\nexport default Header\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BikeStation, BikeAvailability } from '../../service/tdxApi/types'\nimport { InitialState, SuccessPayload, FailurePayload } from '../types'\n\nexport type Station = BikeStation & BikeAvailability\n\nconst initialState: InitialState<Station[]> = {\n  pedding: false,\n  data: [],\n  error: null\n}\n\nexport type RequestPayload = {\n  keyword: string\n  city: string\n}\n\nexport type NearByRequestPayload = {\n  position: [number, number]\n}\n\nexport const stationSlice = createSlice({\n  name: 'station',\n  initialState,\n  reducers: {\n    request: (state, action: PayloadAction<RequestPayload | NearByRequestPayload>) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.pedding = true\n    },\n    success: (state, action: PayloadAction<SuccessPayload<(BikeStation & BikeAvailability)[]>>) => {\n      state.pedding = false\n      state.data = action.payload.data\n      state.error = null\n    },\n    failure: (state, action: PayloadAction<FailurePayload>) => {\n      state.pedding = false\n      state.error = action.payload.error\n    },\n    clear: (state, action: PayloadAction) => {\n      state.data = []\n      state.pedding = false\n      state.error = null\n    }\n  }\n})\n\nexport const { request: stationRequestAction, success: stationSuccessAction, failure: stationFailureAction, clear: stationClearAction } = stationSlice.actions\n\nexport default stationSlice.reducer","import React, { useCallback, useEffect, useRef } from 'react'\nimport L from 'leaflet'\n\nconst DisableEventPropagationContainer = ({ children }: { children: React.ReactNode }) => {\n  const domRef = useRef(null)\n\n  const disableEventPropagation = useCallback(() => {\n    if (domRef.current) {\n      L.DomEvent.disableClickPropagation(domRef.current);\n      L.DomEvent.disableScrollPropagation(domRef.current)\n    } else {\n      setTimeout(() => {\n        disableEventPropagation()\n      }, 100)\n    }\n  }, [])\n\n  useEffect(() => {\n    disableEventPropagation()\n  }, [disableEventPropagation])\n\n  return (\n    <div ref={domRef}>\n      {children}\n    </div>\n  )\n}\n\nexport default DisableEventPropagationContainer","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DisplayTypes } from '../../constants'\n\nexport type DisplayTypeState = {\n  type: DisplayTypes\n}\n\nconst initialState: DisplayTypeState = {\n  type: DisplayTypes.Bike\n}\n\nexport const displayTypeSlice = createSlice({\n  name: 'displayType',\n  initialState,\n  reducers: {\n    update: (state, action: PayloadAction<DisplayTypeState>) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.type = action.payload.type\n    }\n  }\n})\n\nexport const { update: displayTypeUpdateAction } = displayTypeSlice.actions\n\nexport default displayTypeSlice.reducer","import { css, keyframes } from 'styled-components'\nimport { StationStatus } from '../constants'\n\nexport const shawdowCss = css`\n  box-shadow: 4px 4px 20px 0 ${props => props.theme.colors.grey[500]}30;\n`\n\nexport type LineLimit = {\n  lineLimit: number\n}\n\nexport const limitLineCss = css<LineLimit>`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  display: -webkit-box;\n  -webkit-line-clamp: ${props => props.lineLimit};\n  -webkit-box-orient: vertical;\n`\n\nexport const rotate = keyframes`\nfrom {\n  transform: rotate(0deg);\n}\n\nto {\n  transform: rotate(360deg);\n}\n`\n\nexport const rotateAnimation = css`\n  animation: ${rotate} 2s linear infinite;\n`\n\nexport const stationStatusCss = css<{ status: StationStatus }>`\n  color: ${props => props.status === StationStatus.Default ? props.theme.colors.primary[500]\n    : props.status === StationStatus.Limited ? props.theme.colors.alert[600]\n      : props.theme.colors.grey[400]\n  };\n  background-color: ${props => props.status === StationStatus.Default ? props.theme.colors.primary[100]\n    : props.status === StationStatus.Limited ? props.theme.colors.alert[100]\n      : props.theme.colors.grey[200]\n  };\n`\n","import styled from 'styled-components'\nimport breakpoint from '../../styles/breakpoint'\nimport { limitLineCss, stationStatusCss } from '../../styles/helper'\n\nexport const StationItemWrapper = styled.li`\n  display: block;\n  border-top: 1px solid ${props => props.theme.colors.grey[300]};\n  padding: 10px 28px 10px 16px;\n\n  ${breakpoint('md')`\n    padding: 20px 40px 20px 28px;\n  `}\n`\n\nexport const StationItemTitle = styled.h1`\n  ${limitLineCss}\n  font-size: 22px;\n  line-height: 26px;\n  font-weight: 700;\n  color: ${props => props.theme.colors.primary[500]};\n`\n\nexport const StationItemContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 12px;\n`\n\nexport const StationItemBadge = styled.button`\n  ${stationStatusCss}\n  flex: 1 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-align: center;\n  padding: 4px 20px;\n  border-radius: 8px;\n\n  &:nth-child(n+2) {\n    margin-left: 20px;\n  }\n\n  ${breakpoint('md')`\n    display: block;\n    padding: 8px 0;\n  `}\n`\n\nexport const BadgeTitle = styled.span`\n  display: inline-block;\n  font-size: 15px;\n  line-height: 20px;\n  font-weight: 500;\n\n  & i {\n    margin-right: 4px;\n  }\n\n  ${breakpoint('md')`\n    display: block;\n  `}\n`\n\nexport const BadgeInfo = styled.span`\n  display: inline-block;\n  font-size: 20px;\n  line-height: 32px;\n  font-weight: 700;\n\n  ${breakpoint('md')`\n    display: block;\n    font-size: 26px;\n    margin-top: 4px;\n  `}\n`\n\nexport const StationItemTip = styled.span`\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 20px;\n  border-radius: 6px;\n  color: ${props => props.theme.colors.grey[500]};\n\n  & i {\n    margin-right: 6px;\n  }\n`\n\nexport const StationItemBorderTip = styled(StationItemTip)`\n  padding: 6px 12px;\n  border: 1px solid ${props => props.theme.colors.grey[500]};\n`;\n","import { StationStatus, AVAILABLE_LIMIT } from '../constants'\n\n/**********************************/\n/******** Ui display logic ********/\n/**********************************/\n\nexport const getStationStatusType = (\n  serviceStatus: number,\n  availableBikes: number\n) => {\n  if (serviceStatus !== 1) return StationStatus.Disabled\n  return availableBikes > AVAILABLE_LIMIT\n    ? StationStatus.Default\n    : availableBikes > 0\n    ? StationStatus.Limited\n    : StationStatus.Disabled\n}\n\nexport const formatLength = (value: number, baseUnit: string = 'm') => {\n  switch (baseUnit) {\n    case 'm':\n      if (value >= 1000) return `${value / 1000} 公里`\n      return `${value} 公尺`\n    default:\n      return `${value} ${baseUnit}`\n  }\n}\n","import React from 'react'\nimport { Station } from '../../store/station'\nimport * as Styled from './styled'\nimport { getStationStatusType } from '../../utils'\nimport { ServiceStatus } from '../../constants'\nimport { DisplayTypes } from '../../constants'\n\nexport type BadgeClick = (type: DisplayTypes, targetData: Station) => void\n\nconst StationItem = React.memo(\n  ({ station, badgeClick }: { station: Station; badgeClick: BadgeClick }) => {\n    return (\n      <Styled.StationItemWrapper>\n        <Styled.StationItemTitle lineLimit={1}>\n          {station.StationName.Zh_tw.split('_')[1]}\n        </Styled.StationItemTitle>\n        <Styled.StationItemContentWrapper>\n          <Styled.StationItemBadge\n            data-type=\"rent\"\n            status={getStationStatusType(\n              station.ServiceStatus,\n              station.AvailableRentBikes\n            )}\n            onClick={() => badgeClick(DisplayTypes.Bike, station)}\n          >\n            <Styled.BadgeTitle>\n              <i className=\"fas fa-bicycle\"></i>\n              可租借\n            </Styled.BadgeTitle>\n            <Styled.BadgeInfo>{station.AvailableRentBikes}</Styled.BadgeInfo>\n          </Styled.StationItemBadge>\n          <Styled.StationItemBadge\n            data-type=\"return\"\n            status={getStationStatusType(\n              station.ServiceStatus,\n              station.AvailableReturnBikes\n            )}\n            onClick={() => badgeClick(DisplayTypes.Parking, station)}\n          >\n            <Styled.BadgeTitle>\n              <i className=\"fas fa-parking\"></i>\n              可停車\n            </Styled.BadgeTitle>\n            <Styled.BadgeInfo>{station.AvailableReturnBikes}</Styled.BadgeInfo>\n          </Styled.StationItemBadge>\n        </Styled.StationItemContentWrapper>\n        <Styled.StationItemContentWrapper>\n          <Styled.StationItemBorderTip>\n            {station.StationName.Zh_tw.split('_')[0]}\n          </Styled.StationItemBorderTip>\n          <Styled.StationItemTip>\n            <i className=\"fas fa-lightbulb\"></i>\n            {ServiceStatus[station.ServiceStatus]}\n          </Styled.StationItemTip>\n        </Styled.StationItemContentWrapper>\n      </Styled.StationItemWrapper>\n    )\n  }\n)\n\nexport default StationItem\n","import styled from 'styled-components'\nimport breakpoint from '../../styles/breakpoint'\n\nexport const ProblemWrapper = styled.div`\n  width: 100%;\n  padding: 40px 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  color: ${props => props.theme.colors.grey[400]};\n`\n\nexport const ProblemText = styled.p`\n  font-size: 18px;\n  margin: 0 0 0 8px;\n  text-align: center;\n  padding: 0 40px;\n\n  ${breakpoint('md')`\n    text-align: start;\n    padding: 0;\n  `}\n`\n\nexport const IconWrapper = styled.div`\n  font-size: 32px;\n`","import React from 'react'\nimport * as Styled from './style'\nimport { Problems } from '../../constants'\n\nfunction ProblemPlaceholder({ problem }: { problem: Problems }) {\n  return (\n    <Styled.ProblemWrapper>\n      <Styled.IconWrapper>\n        <i className=\"fas fa-exclamation-circle\"></i>\n      </Styled.IconWrapper>\n      <div>\n        <Styled.ProblemText>\n          {problem === Problems.NoResult && '無搜尋相關的內容'}\n          {problem === Problems.PageNotFound && '找不到該頁面'}\n          {problem === Problems.Error && '伺服器錯誤，請稍後再試'}\n        </Styled.ProblemText>\n      </div>\n    </Styled.ProblemWrapper>\n  )\n}\n\nexport default ProblemPlaceholder\n","import styled from 'styled-components'\nimport { rotateAnimation } from '../../styles/helper'\n\nexport const LoadingWrapper = styled.div`\n  width: 100%;\n  padding: 40px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${props => props.theme.colors.primary[400]};\n`\n\nexport const ElementWrapper = styled.div`\n  font-size: 32px;\n  ${rotateAnimation}\n`","import * as Styled from './style'\n\nfunction LoadingPlaceholder() {\n  return (\n    <Styled.LoadingWrapper>\n      <Styled.ElementWrapper>\n        <i className=\"fas fa-spinner\"></i>\n      </Styled.ElementWrapper>\n    </Styled.LoadingWrapper>\n  )\n}\n\nexport default LoadingPlaceholder\n","import styled from 'styled-components'\nimport { shawdowCss } from '../../styles/helper'\nimport breakpoint from '../../styles/breakpoint'\n\nexport const SearchListWrapper = styled.section<{ isUnfold: boolean }>`\n  position: absolute;\n  bottom: ${props => props.isUnfold ? '0px' : '-200px'};\n  left: 0;\n  width: 100vw;\n  height: 300px;\n  padding: 16px 0;\n  z-index: 402; // In order to biger than Map's z-index\n  background-color: ${props => props.theme.colors.grey[100]};\n  border-radius: 8px;\n  cursor: initial;\n  /* overflow: hidden; */\n  ${shawdowCss}\n  transition: bottom 0.3s linear;\n\n  ${breakpoint('md')`\n    top: 36px;\n    left: 36px;\n    width: 430px;\n    height: calc(100% - 72px);\n    padding: 28px 0;\n  `}\n`\n\nexport const SearchListUnfoldButton = styled.button`\n  position: absolute;\n  bottom: 100%;\n  background-color: ${props => props.theme.colors.grey[100]};\n  width: 60px;\n  height: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  border-radius: 6px 6px 0 0;\n  z-index: 402;\n  font-size: 14px;\n\n  ${breakpoint('md')`\n    display: none;\n  `}\n`\n\nexport const SearchBar = styled.div`\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  padding: 0 16px;\n\n  ${breakpoint('md')`\n    margin-bottom: 28px;\n    padding: 0 28px;\n  `}\n`\n\nexport const SearchResultListWrapper = styled.ul`\n  width: 100%;\n  height: calc(100% - 36px - 28px);\n  overflow: auto;\n`\n\nexport const SearchInputWrapper = styled.div`\n  position: relative;\n  padding: 8px 48px 8px 20px;\n  margin-left: 12px;\n  flex: 1 0 auto;\n  background-color: ${props => props.theme.colors.grey[200]};\n  color: ${props => props.theme.colors.grey[600]};\n  border-radius: 8px;\n  font-weight: bold;\n  font-size: 14px;\n`\n\nexport const SearchInput = styled.input`\n  width: 100%;\n  height: 100%;\n`\n\nexport const SearchButton = styled.button`\n  position: absolute;\n  right: 20px;\n  top: 50%;\n  transform: translateY(-50%);\n  font-size: 20px;\n  color: ${props => props.theme.colors.grey[600]};\n`\n\nexport const SearchSelect = styled.select`\n  width: 100px;\n  padding: 8px 12px;\n  font-size: 15px;\n  line-height: 20px;\n  color: ${props => props.theme.colors.primary[600]};\n  border: 2px solid ${props => props.theme.colors.primary[400]};\n  border-radius: 8px;\n`","const availableCities = [\n  {\n    \"CityName\": \"臺北市\",\n    \"City\": \"Taipei\"\n  },\n  {\n    \"CityName\": \"新北市\",\n    \"City\": \"NewTaipei\"\n  },\n  {\n    \"CityName\": \"桃園市\",\n    \"City\": \"Taoyuan\"\n  },\n  {\n    \"CityName\": \"臺中市\",\n    \"City\": \"Taichung\"\n  },\n  {\n    \"CityName\": \"臺南市\",\n    \"City\": \"Tainan\"\n  },\n  {\n    \"CityName\": \"高雄市\",\n    \"City\": \"Kaohsiung\"\n  },\n  {\n    \"CityName\": \"新竹市\",\n    \"City\": \"Hsinchu\"\n  },\n  {\n    \"CityName\": \"苗栗縣\",\n    \"City\": \"MiaoliCounty\"\n  },\n  {\n    \"CityName\": \"嘉義市\",\n    \"City\": \"Chiayi\"\n  },\n  {\n    \"CityName\": \"屏東縣\",\n    \"City\": \"PingtungCounty\"\n  },\n  {\n    \"CityName\": \"金門縣\",\n    \"City\": \"KinmenCounty\"\n  }\n]\n\nexport default availableCities","import React, { useState } from 'react'\nimport * as Styled from './styled'\nimport availableCities from '../../constants/availableCities'\n\nconst SearchList = ({\n  openSearchList,\n  toggleSearchList,\n  children,\n  placeholderText,\n  submitHandler,\n}: {\n  openSearchList: boolean\n  toggleSearchList: React.Dispatch<React.SetStateAction<boolean>>\n  children: React.ReactNode\n  placeholderText?: string\n  submitHandler: (keyword: string, city: string) => void\n}) => {\n  const [keyword, setKeyword] = useState('')\n  const [city, setCity] = useState(availableCities[0].City)\n\n  return (\n    <Styled.SearchListWrapper isUnfold={openSearchList}>\n      <Styled.SearchListUnfoldButton\n        onClick={() => toggleSearchList(!openSearchList)}\n      >\n        {openSearchList ? (\n          <i className=\"fas fa-angle-down\"></i>\n        ) : (\n          <i className=\"fas fa-angle-up\"></i>\n        )}\n      </Styled.SearchListUnfoldButton>\n      <Styled.SearchBar>\n        <Styled.SearchSelect onChange={(e) => setCity(e.target.value)}>\n          {availableCities.map((city) => (\n            <option key={city.City} value={city.City}>\n              {city.CityName}\n            </option>\n          ))}\n        </Styled.SearchSelect>\n        <Styled.SearchInputWrapper>\n          <Styled.SearchInput\n            type=\"text\"\n            value={keyword}\n            placeholder={placeholderText || '搜尋'}\n            onChange={(e) => setKeyword(e.target.value)}\n            onKeyPress={(e) => {\n              if (e.key === 'Enter') {\n                submitHandler(keyword, city)\n              }\n            }}\n          />\n          <Styled.SearchButton onClick={() => submitHandler(keyword, city)}>\n            <i className=\"fas fa-search\"></i>\n          </Styled.SearchButton>\n        </Styled.SearchInputWrapper>\n      </Styled.SearchBar>\n      <Styled.SearchResultListWrapper>\n        {children}\n      </Styled.SearchResultListWrapper>\n    </Styled.SearchListWrapper>\n  )\n}\n\nexport default SearchList\n","import styled from 'styled-components'\nimport { shawdowCss, rotateAnimation } from '../../styles/helper'\nimport breakpoint from '../../styles/breakpoint'\n\nexport const PositionButtonWrapper = styled.button<{\n  active: boolean,\n  locating: boolean,\n  openSearchList: boolean\n}>`\n  position: absolute;\n  right: 28px;\n  bottom: ${props => props.openSearchList ? 'calc(300px + 12px)' : 'calc(100px + 12px)'};\n  width: 40px;\n  height: 40px;\n  border-radius: 100%;\n  background-color: ${props => props.active ? props.theme.colors.primary[400] : props.theme.colors.grey[300]};\n  color: ${props => props.theme.colors.grey[100]};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 402; // In order to biger than Map's z-index\n  font-size: 20px;\n  ${shawdowCss}\n  ${props => props.locating ? rotateAnimation : ''}\n  transition: bottom 0.3s linear;\n\n  &:hover {\n    border: 3px solid ${props => props.theme.colors.primary[500]};\n  }\n\n  ${breakpoint('md')`\n    top: 36px;\n    bottom: auto;\n    right: calc(50% - 30px);\n    font-size: 30px;\n    width: 60px;\n    height: 60px;\n  `}\n`","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport type GeolocationInitialState = {\n  position: [number, number] | null,\n  center: [number, number]\n}\n\nconst initialState: GeolocationInitialState = {\n  position: null,\n  center: [23.703875, 120.982024] // Taiwan\n}\n\nexport type UpdatePayload = Partial<GeolocationInitialState>\n\nexport const geolocationSlice = createSlice({\n  name: 'geolocation',\n  initialState,\n  reducers: {\n    update: (state, action: PayloadAction<UpdatePayload>) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      if (action.payload.position !== undefined) {\n        state.position = action.payload.position\n      }\n      if (action.payload.center !== undefined) {\n        state.center = action.payload.center\n      }\n    },\n    reset: state => {\n      state.position = null\n    }\n  }\n})\n\nexport const { update: geolocationUpdateAction, reset: geolocationResetAction } = geolocationSlice.actions\n\nexport default geolocationSlice.reducer","import { useState } from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport * as Styled from './styled'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState, AppDispatch } from '../../store'\nimport {\n  geolocationUpdateAction,\n  geolocationResetAction,\n} from '../../store/geolocation'\nimport { stationRequestAction } from '../../store/station'\nimport { PositionButtonActions } from '../../constants'\nimport { useMap } from 'react-leaflet'\n\nconst PositionButton = ({\n  openSearchList,\n  action,\n}: {\n  openSearchList: boolean\n  action: PositionButtonActions\n}) => {\n  const map = useMap()\n  const [watchPositionId, setWatchPositionId] = useState<number | null>(null)\n  const [locating, setLocating] = useState(false)\n  const dispatch = useDispatch<AppDispatch>()\n  const position = useSelector((state: RootState) => state.geolocation.position)\n\n  const positionHandler = () => {\n    if ('geolocation' in navigator) {\n      if (position) {\n        // stopWatchPositionAndReset()\n        if (action === PositionButtonActions.Search) {\n          dispatch(stationRequestAction({ position }))\n        }\n        map.flyTo(position)\n      } else {\n        watchPositionAndUpdate()\n      }\n    } else {\n      alert('Geolocation is not supported by your browser')\n    }\n  }\n\n  const watchPositionAndUpdate = () => {\n    setLocating(true)\n    const watchId = navigator.geolocation.watchPosition(\n      (position) => {\n        dispatch(\n          geolocationUpdateAction({\n            position: [position.coords.latitude, position.coords.longitude],\n          })\n        )\n        setLocating(false)\n      },\n      (error) => {\n        alert('Unable to retrieve your location')\n        setLocating(false)\n      }\n    )\n    setWatchPositionId(watchId)\n  }\n\n  // const stopWatchPositionAndReset = () => {\n  //   if (watchPositionId) {\n  //     navigator.geolocation.clearWatch(watchPositionId)\n  //     dispatch(geolocationResetAction())\n  //   }\n  // }\n\n  return (\n    <>\n      <Styled.PositionButtonWrapper\n        openSearchList={openSearchList}\n        data-tip\n        data-for=\"postitionButton\"\n        active={!!position}\n        locating={locating}\n        onClick={() => positionHandler()}\n      >\n        <i className=\"fas fa-crosshairs\"></i>\n      </Styled.PositionButtonWrapper>\n      <ReactTooltip\n        id=\"postitionButton\"\n        place=\"right\"\n        type=\"dark\"\n        effect=\"solid\"\n      >\n        我的位置\n      </ReactTooltip>\n    </>\n  )\n}\n\nexport default PositionButton\n","import styled from 'styled-components'\nimport { shawdowCss } from '../../styles/helper'\nimport breakpoint from '../../styles/breakpoint'\n\nexport const ToggleDisplayButtonWrapper = styled.div`\n  position: absolute;\n  padding: 4px 6px;\n  top: 20px;\n  right: calc(50% - 100px);\n  width: 200px;\n  height: 36px;\n  cursor: pointer;\n  z-index: 402; // In order to biger than Map's z-index\n  ${shawdowCss}\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${props => props.theme.colors.grey[100]};\n  border-radius: 999px;\n\n  ${breakpoint('md')`\n    width: 280px;\n    height: 60px;\n    padding: 8px 12px;\n    top: calc(36px + 60px + 12px);\n    right: calc(50% - 140px);\n  `}\n`\n\nexport const DisplayButton = styled.button<{ active?: boolean }>`\n  flex: 1 0 auto;\n  width: 50%;\n  height: 100%;\n  border-radius: 999px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${props => props.active ? props.theme.colors.grey[100] : props.theme.colors.primary[400]};\n  background-color: ${props => props.active ? props.theme.colors.primary[400] : props.theme.colors.grey[100]};\n  font-size: 14px;\n\n  & i {\n    margin-right: 8px;\n  }\n\n  ${breakpoint('md')`\n    font-size: 18px;\n  `}\n`","import * as Styled from './styled'\nimport { RootState, AppDispatch } from '../../store'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { displayTypeUpdateAction } from '../../store/displayType'\nimport { DisplayTypes } from '../../constants'\n\nconst ToggleDisplayButton = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { type } = useSelector((state: RootState) => state.displayType)\n\n  const toggleDisplayTypeHandler = (value: DisplayTypes) => {\n    if (type === value) return\n    dispatch(displayTypeUpdateAction({ type: value }))\n  }\n\n  return (\n    <Styled.ToggleDisplayButtonWrapper>\n      <Styled.DisplayButton\n        active={type === DisplayTypes.Bike}\n        onClick={() => toggleDisplayTypeHandler(DisplayTypes.Bike)}\n      >\n        <i className=\"fas fa-bicycle\"></i>\n        找單車\n      </Styled.DisplayButton>\n      <Styled.DisplayButton\n        active={type === DisplayTypes.Parking}\n        onClick={() => toggleDisplayTypeHandler(DisplayTypes.Parking)}\n      >\n        <i className=\"fas fa-parking\"></i>\n        找車位\n      </Styled.DisplayButton>\n    </Styled.ToggleDisplayButtonWrapper>\n  )\n}\n\nexport default ToggleDisplayButton\n","import { useEffect, useState, useCallback } from 'react'\nimport { useMap } from 'react-leaflet'\nimport { RootState, AppDispatch } from '../../store'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { displayTypeUpdateAction } from '../../store/displayType'\nimport StationItem, { BadgeClick } from '../../components/StationItem'\nimport ProblemPlaceholder from '../../components/ProblemPlaceholder'\nimport { Problems, PositionButtonActions } from '../../constants'\nimport LoadingPlaceholder from '../../components/LoadingPlaceholder'\nimport SearchList from '../../components/SearchList'\nimport PositionButton from '../../components/PositionButton'\nimport ToggleDisplayButton from '../../components/ToggleDisplayButton'\nimport { stationRequestAction, stationClearAction } from '../../store/station'\n\nconst BicyclePage = () => {\n  const map = useMap()\n  const dispatch = useDispatch<AppDispatch>()\n  const { type } = useSelector((state: RootState) => state.displayType)\n  const { pedding, data, error } = useSelector(\n    (state: RootState) => state.station\n  )\n  const [openSearchList, setOpenSearchList] = useState(false)\n\n  const badgeClickHandler: BadgeClick = useCallback(\n    (targetType, targetData) => {\n      if (type !== targetType) {\n        dispatch(displayTypeUpdateAction({ type: targetType }))\n      }\n      map.flyTo(\n        [\n          targetData.StationPosition.PositionLat,\n          targetData.StationPosition.PositionLon,\n        ],\n        undefined,\n        { animate: false }\n      )\n    },\n    [dispatch, map, type]\n  )\n\n  const submitHandler = (keyword: string, city: string) => {\n    dispatch(stationRequestAction({ keyword, city }))\n  }\n\n  useEffect(() => {\n    return () => {\n      dispatch(stationClearAction())\n    }\n  }, [dispatch])\n\n  return (\n    <>\n      <SearchList\n        openSearchList={openSearchList}\n        toggleSearchList={setOpenSearchList}\n        placeholderText={'搜尋站點'}\n        submitHandler={submitHandler}\n      >\n        {pedding && <LoadingPlaceholder />}\n        {error && <ProblemPlaceholder problem={Problems.Error} />}\n        {!pedding &&\n          !error &&\n          (data.length > 0 ? (\n            data.map((station) => (\n              <StationItem\n                key={station.StationID}\n                station={station}\n                badgeClick={badgeClickHandler}\n              />\n            ))\n          ) : (\n            <ProblemPlaceholder problem={Problems.NoResult} />\n          ))}\n      </SearchList>\n      <ToggleDisplayButton />\n      <PositionButton\n        openSearchList={openSearchList}\n        action={PositionButtonActions.Search}\n      />\n    </>\n  )\n}\n\nexport default BicyclePage\n","import styled from 'styled-components'\nimport breakpoint from '../../styles/breakpoint'\nimport { limitLineCss, LineLimit } from '../../styles/helper'\n\ntype IsActive = {\n  active: boolean\n}\n\nexport const RouteItemWrapper = styled.li<IsActive>`\n  display: block;\n  border-top: 1px solid ${props => props.theme.colors.grey[300]};\n  cursor: pointer;\n  padding: 10px 28px 10px 16px;\n  background-color: ${props => props.active ? props.theme.colors.primary[500] : props.theme.colors.grey[100]};\n\n  &:hover {\n    background-color: ${props => props.active ? props.theme.colors.primary[500] : props.theme.colors.grey[200]};\n  }\n\n  ${breakpoint('md')`\n    padding: 20px 40px 20px 28px;\n  `}\n`\n\nexport const RouteItemTitle = styled.h1<IsActive & LineLimit>`\n  ${limitLineCss}\n  font-size: 22px;\n  line-height: 26px;\n  font-weight: 700;\n  color: ${props => props.active ? props.theme.colors.grey[100] : props.theme.colors.primary[500]};\n`\n\nexport const RouteItemCyclingContent = styled.div`\n  position: relative;\n  margin: 12px 0;\n`\n\nconst RouteItemCyclingText = styled.span<IsActive>`\n  padding: 8px 12px;\n  font-size: 15px;\n  background-color: ${props => props.active ? props.theme.colors.grey[100] : props.theme.colors.primary[100]};\n  color: ${props => props.theme.colors.primary[500]};\n  font-weight: 500;\n  line-height: 20px;\n  border-radius: 8px;\n`\n\nexport const RouteItemCyclingRoadSection = styled(RouteItemCyclingText)`\n  flex: 1 1 auto;\n`\n\nexport const RouteItemCyclingTitle = styled(RouteItemCyclingText)`\n  flex: 0 0 auto;\n  margin-right: 8px;\n  margin-left: 20px;\n`\n\nexport const RouteItemRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  &:nth-child(n+2) {\n    margin-top: 12px;\n  }\n`\n\nexport const RouteItemInfo = styled.span<IsActive>`\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 20px;\n  border-radius: 6px;\n  color: ${props => props.active ? props.theme.colors.grey[200] : props.theme.colors.grey[500]};\n\n  & i {\n    margin-right: 6px;\n  }\n`\n\nexport const RouteItemDirection = styled.span<IsActive>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  font-size: 60px;\n  transform: scaleX(0.5);\n  transform-origin: 0% 50%;\n  color: ${props => props.active ? props.theme.colors.grey[100] : props.theme.colors.grey[500]};\n`\n","import React from 'react'\nimport { BikeShapeSorted } from '../../service/tdxApi/types'\nimport * as Styled from './styled'\nimport { formatLength } from '../../utils'\n\nexport type ItemOnClick = (route: BikeShapeSorted) => void\n\nconst RouteItem = React.memo(\n  ({\n    route,\n    itemOnClick,\n    isActive,\n  }: {\n    route: BikeShapeSorted\n    itemOnClick: ItemOnClick\n    isActive: boolean\n  }) => {\n    return (\n      <Styled.RouteItemWrapper\n        onClick={() => itemOnClick(route)}\n        active={isActive}\n      >\n        <Styled.RouteItemTitle lineLimit={1} active={isActive}>\n          {route.RouteName}\n        </Styled.RouteItemTitle>\n        <Styled.RouteItemCyclingContent>\n          <Styled.RouteItemRow>\n            <Styled.RouteItemCyclingTitle active={isActive}>\n              起\n            </Styled.RouteItemCyclingTitle>\n            <Styled.RouteItemCyclingRoadSection active={isActive}>\n              {route.RoadSectionStart}\n            </Styled.RouteItemCyclingRoadSection>\n          </Styled.RouteItemRow>\n          <Styled.RouteItemRow>\n            <Styled.RouteItemCyclingTitle active={isActive}>\n              迄\n            </Styled.RouteItemCyclingTitle>\n            <Styled.RouteItemCyclingRoadSection active={isActive}>\n              {route.RoadSectionEnd}\n            </Styled.RouteItemCyclingRoadSection>\n          </Styled.RouteItemRow>\n          <Styled.RouteItemDirection active={isActive}>\n            {route.Direction === '雙向' ? (\n              <i className=\"fas fa-arrows-alt-v\"></i>\n            ) : (\n              <i className=\"fas fa-long-arrow-alt-down\"></i>\n            )}\n          </Styled.RouteItemDirection>\n        </Styled.RouteItemCyclingContent>\n        <Styled.RouteItemRow>\n          <Styled.RouteItemInfo active={isActive}>\n            <i className=\"fas fa-map-marker-alt\"></i>\n            {route.City}\n          </Styled.RouteItemInfo>\n          <Styled.RouteItemInfo active={isActive}>\n            <i className=\"fas fa-route\"></i>\n            總長 {formatLength(route.CyclingLength)}\n          </Styled.RouteItemInfo>\n        </Styled.RouteItemRow>\n      </Styled.RouteItemWrapper>\n    )\n  }\n)\n\nexport default RouteItem\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BikeShapeSorted } from '../../service/tdxApi/types'\nimport { InitialState, SuccessPayload, FailurePayload } from '../types'\n\nconst initialState: InitialState<BikeShapeSorted[]> & { current: BikeShapeSorted | null } = {\n  pedding: false,\n  data: [],\n  error: null,\n  current: null\n}\n\nexport type RequestPayload = {\n  keyword: string\n  city: string\n}\n\nexport type NearByRequestPayload = {\n  position: [number, number]\n}\n\nexport const routeSlice = createSlice({\n  name: 'route',\n  initialState,\n  reducers: {\n    request: (state, action: PayloadAction<RequestPayload>) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.pedding = true\n    },\n    success: (state, action: PayloadAction<SuccessPayload<BikeShapeSorted[]>>) => {\n      state.pedding = false\n      state.data = action.payload.data\n      state.error = null\n    },\n    failure: (state, action: PayloadAction<FailurePayload>) => {\n      state.pedding = false\n      state.error = action.payload.error\n    },\n    clear: (state, action: PayloadAction) => {\n      state.data = []\n      state.pedding = false\n      state.error = null\n      state.current = null\n    },\n    setCurrent: (state, action: PayloadAction<{ route: BikeShapeSorted }>) => {\n      state.current = action.payload.route\n    }\n  }\n})\n\nexport const {\n  request: routeRequestAction,\n  success: routeSuccessAction,\n  failure: routeFailureAction,\n  clear: routeClearAction,\n  setCurrent: routeSetCurrent\n} = routeSlice.actions\n\nexport default routeSlice.reducer","import { useCallback, useEffect, useState } from 'react'\nimport { RootState, AppDispatch } from '../../store'\nimport { useSelector, useDispatch } from 'react-redux'\nimport SearchList from '../../components/SearchList'\nimport PositionButton from '../../components/PositionButton'\nimport RouteItem, { ItemOnClick } from '../../components/RouteItem'\nimport {\n  routeRequestAction,\n  routeClearAction,\n  routeSetCurrent,\n} from '../../store/route'\nimport ProblemPlaceholder from '../../components/ProblemPlaceholder'\nimport { PositionButtonActions, Problems } from '../../constants'\nimport LoadingPlaceholder from '../../components/LoadingPlaceholder'\n\nconst RoutePage = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { pedding, data, error, current } = useSelector(\n    (state: RootState) => state.route\n  )\n  const [openSearchList, setOpenSearchList] = useState(false)\n\n  const itemClickHandler: ItemOnClick = useCallback(\n    (data) => {\n      dispatch(routeSetCurrent({ route: data }))\n    },\n    [dispatch]\n  )\n\n  const submitHandler = (keyword: string, city: string) => {\n    dispatch(routeRequestAction({ keyword, city }))\n  }\n\n  useEffect(() => {\n    return () => {\n      dispatch(routeClearAction())\n    }\n  }, [dispatch])\n\n  return (\n    <>\n      <SearchList\n        openSearchList={openSearchList}\n        toggleSearchList={setOpenSearchList}\n        submitHandler={submitHandler}\n        placeholderText={'搜尋路線'}\n      >\n        {pedding && <LoadingPlaceholder />}\n        {error && <ProblemPlaceholder problem={Problems.Error} />}\n        {!pedding &&\n          !error &&\n          (data.length > 0 ? (\n            data.map((route) => (\n              <RouteItem\n                key={route.RouteName}\n                route={route}\n                isActive={current?.RouteName === route.RouteName}\n                itemOnClick={itemClickHandler}\n              />\n            ))\n          ) : (\n            <ProblemPlaceholder problem={Problems.NoResult} />\n          ))}\n      </SearchList>\n      <PositionButton\n        openSearchList={openSearchList}\n        action={PositionButtonActions.Locate}\n      />\n    </>\n  )\n}\n\nexport default RoutePage\n","import styled from 'styled-components'\n\nexport const TooltipContentWrapper = styled.div`\n  color: ${props => props.theme.colors.grey[100]};\n  padding: 4px 12px;\n  font-size: 14px;\n`","export default __webpack_public_path__ + \"static/media/dribbble-unscreen.04671d5f.gif\";","import { Marker as LeafMarker, Tooltip } from 'react-leaflet'\nimport { TooltipContentWrapper } from '../../../styles/globalStyled'\nimport L from 'leaflet'\n// import userPositionSvg from '../../../assets/images/user-position.svg'\nimport userPositionSvg from '../../../assets/images/dribbble-unscreen.gif'\n\nconst userPositionIcon = new (L.icon as any)({\n  iconUrl: userPositionSvg,\n  iconSize: [120, 90],\n  iconAnchor: [60, 45],\n  popupAnchor: [1, -90],\n})\n\nconst PositionMarker = ({ position }: { position: [number, number] }) => {\n  return (\n    <LeafMarker\n      data-tip\n      data-for=\"postitionMarker\"\n      icon={userPositionIcon}\n      position={position}\n    >\n      <Tooltip offset={[20, 0]}>\n        <TooltipContentWrapper>現在位置</TooltipContentWrapper>\n      </Tooltip>\n    </LeafMarker>\n  )\n}\n\nexport default PositionMarker\n","const theme = {\n  layout: {\n    headerHeight: {\n      default: '36px',\n      md: '60px'\n    }\n  },\n  typography: {\n    h1: '45px',\n    h2: '36px',\n    h3: '32px',\n    h4: '36px',\n    h5: '22px',\n    content: '18px',\n    button: '15px',\n    caption: '12px'\n  },\n  colors: {\n    primary: {\n      100: '#DFE4CE',\n      200: '#CBD3B0',\n      300: '#A4B375',\n      400: '#738047',\n      500: '#474F2C',\n      600: '#292E19'\n    },\n    accent: {\n      100: '#FAF0E5',\n      200: '#F5DFC6',\n      300: '#EABD8A',\n      400: '#DE994A',\n      500: '#C67A24',\n      600: '#A3651E'\n    },\n    alert: {\n      100: '#F7D4DD',\n      200: '#F1B2C1',\n      300: '#F27594',\n      400: '#E75578',\n      500: '#BC3253',\n      600: '#8C3046'\n    },\n    grey: {\n      100: '#FFFFFF',\n      200: '#EEEEEE',\n      300: '#C5C5C5',\n      400: '#9A9A9A',\n      500: '#767676',\n      600: '#464646',\n      700: '#222222'\n    }\n  }\n}\n\nexport default theme","import styled from 'styled-components'\n\nexport const SvgText = styled.text<{ color: string, isOverTen: boolean }>`\n  fill: ${props => props.color};\n  font-size: 24px;\n  font-weight: bold;\n  transform: ${props => props.isOverTen ? 'translateX(-14px)' : 'translateX(-7px)'};\n`","import { useMemo } from 'react'\nimport { StationStatus } from '../../../../constants'\nimport theme from '../../../../styles/theme'\nimport { lighten } from 'polished'\nimport * as Styled from './styled'\n\nconst StationIcon = ({\n  status,\n  quantity,\n}: {\n  status: StationStatus\n  quantity: number\n}) => {\n  const pathColor = useMemo(() => {\n    return status === StationStatus.Default\n      ? theme.colors.primary[400]\n      : status === StationStatus.Limited\n      ? theme.colors.alert[400]\n      : theme.colors.grey[400]\n  }, [status])\n\n  const ellipseColor = useMemo(() => {\n    return status === StationStatus.Default\n      ? lighten(0.2, theme.colors.primary[400])\n      : status === StationStatus.Limited\n      ? lighten(0.2, theme.colors.alert[400])\n      : lighten(0.2, theme.colors.grey[400])\n  }, [status])\n\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      viewBox=\"0 0 58 77\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <ellipse cx=\"29\" cy=\"72.5\" rx=\"15\" ry=\"4.5\" fill={ellipseColor} />\n      <path\n        d=\"M28.8003 0C12.9207 0 0.000293201 12.9204 0.000293201 28.782C-0.104107 51.984 27.7059 71.2224 28.8003 72C28.8003 72 57.7047 51.984 57.6003 28.8C57.6003 12.9204 44.6799 0 28.8003 0ZM28.8003 43.2C20.8443 43.2 14.4003 36.756 14.4003 28.8C14.4003 20.844 20.8443 14.4 28.8003 14.4C36.7563 14.4 43.2003 20.844 43.2003 28.8C43.2003 36.756 36.7563 43.2 28.8003 43.2Z\"\n        fill={pathColor}\n      />\n      <circle cx=\"29\" cy=\"29\" r=\"19\" fill=\"#fff\" />\n      <Styled.SvgText\n        x=\"50%\"\n        y=\"47%\"\n        color={pathColor}\n        isOverTen={quantity >= 10}\n      >\n        {quantity}\n      </Styled.SvgText>\n    </svg>\n  )\n}\n\nexport default StationIcon\n","import styled from 'styled-components'\nimport { stationStatusCss } from '../../../../styles/helper'\nimport breakpoint from '../../../../styles/breakpoint'\n\nexport const StationPopupTitle = styled.h1`\n  font-weight: 700;\n  font-size: 15px;\n  line-height: 1.3;\n  color: ${props => props.theme.colors.primary[500]};\n\n  ${breakpoint('md')`\n    font-size: 18px;\n    line-height: 1.5;\n  `}\n`\n\nexport const StationPopupInfo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  &:nth-child(n+2) {\n    margin-top: 8px;\n  }\n`\n\nexport const StationPopupStatus = styled.span`\n  color: ${props => props.theme.colors.grey[500]};\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 20px;\n\n  & i {\n    margin-right: 6px;\n  }\n`\n\nexport const StationPopupBadgeWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const StationPopupBadge = styled.span`\n  ${stationStatusCss}\n  font-size: 15px;\n  font-weight: 700;\n  line-height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: auto;\n  height: auto;\n  padding: 1px 6px;\n  border-radius: 4px;\n\n  & i {\n    margin-right: 8px;\n  }\n\n  &:nth-child(n+2) {\n    margin-left: 12px;\n  }\n\n  ${breakpoint('md')`\n    width: 70px;\n    height: 30px;\n    padding: 0 12px;\n  `}\n`","import { Popup } from 'react-leaflet'\nimport { Station } from '../../../../store/station'\nimport * as Styled from './styled'\nimport { ServiceStatus } from '../../../../constants'\nimport { getStationStatusType } from '../../../../utils'\nimport useBreakpoint from '../../../../hooks/useBreakpoint'\n\nconst StationPopup = ({ station }: { station: Station }) => {\n  const isMdBp = useBreakpoint('md')\n\n  return (\n    <Popup\n      closeButton={false}\n      minWidth={isMdBp ? 350 : 270}\n      maxHeight={isMdBp ? 100 : 75}\n    >\n      <Styled.StationPopupInfo>\n        <Styled.StationPopupTitle>\n          {station.StationName.Zh_tw.split('_')[1]}\n        </Styled.StationPopupTitle>\n        <Styled.StationPopupStatus>\n          {station.StationName.Zh_tw.split('_')[0]}\n        </Styled.StationPopupStatus>\n      </Styled.StationPopupInfo>\n      <Styled.StationPopupInfo>\n        <Styled.StationPopupBadgeWrapper>\n          <Styled.StationPopupBadge\n            status={getStationStatusType(\n              station.ServiceStatus,\n              station.AvailableRentBikes\n            )}\n          >\n            <i className=\"fas fa-bicycle\"></i>\n            {station.AvailableRentBikes}\n          </Styled.StationPopupBadge>\n          <Styled.StationPopupBadge\n            status={getStationStatusType(\n              station.ServiceStatus,\n              station.AvailableReturnBikes\n            )}\n          >\n            <i className=\"fas fa-parking\"></i>\n            {station.AvailableReturnBikes}\n          </Styled.StationPopupBadge>\n        </Styled.StationPopupBadgeWrapper>\n        <Styled.StationPopupStatus>\n          <i className=\"fas fa-lightbulb\"></i>\n          {ServiceStatus[station.ServiceStatus]}\n        </Styled.StationPopupStatus>\n      </Styled.StationPopupInfo>\n    </Popup>\n  )\n}\n\nexport default StationPopup\n","import { useMemo } from 'react'\nimport { Marker as LeafMarker } from 'react-leaflet'\nimport { Station } from '../../../store/station'\nimport L from 'leaflet'\nimport { DisplayTypes } from '../../../constants'\nimport StationIcon from './StationIcon'\nimport ReactDOMServer from 'react-dom/server'\nimport { StationStatus } from '../../../constants'\nimport { useMap } from 'react-leaflet'\nimport StationPopup from './StationPopup'\nimport { getStationStatusType } from '../../../utils'\nimport useBreakpoint from '../../../hooks/useBreakpoint'\n\nconst generateStationIcon = (\n  status: StationStatus,\n  quantity: number,\n  isMdbp: boolean\n) => {\n  return L.divIcon({\n    iconSize: [45, 60],\n    iconAnchor: [22.5, 30],\n    popupAnchor: isMdbp ? [175, 140] : [0, -25],\n    html: ReactDOMServer.renderToString(\n      <StationIcon status={status} quantity={quantity} />\n    ),\n  })\n}\n\nconst StationMarker = ({\n  station,\n  type,\n}: {\n  station: Station\n  type: DisplayTypes\n}) => {\n  const map = useMap()\n  const isMdbp = useBreakpoint('md')\n\n  const displayIcon = useMemo(() => {\n    if (station.ServiceStatus !== 1)\n      return generateStationIcon(StationStatus.Disabled, 0, isMdbp)\n    return generateStationIcon(\n      getStationStatusType(\n        station.ServiceStatus,\n        type === DisplayTypes.Bike\n          ? station.AvailableRentBikes\n          : station.AvailableReturnBikes\n      ),\n      type === DisplayTypes.Bike\n        ? station.AvailableRentBikes\n        : station.AvailableReturnBikes,\n      isMdbp\n    )\n  }, [\n    station.AvailableRentBikes,\n    station.AvailableReturnBikes,\n    station.ServiceStatus,\n    type,\n    isMdbp,\n  ])\n\n  return (\n    <LeafMarker\n      icon={displayIcon}\n      position={[\n        station.StationPosition.PositionLat,\n        station.StationPosition.PositionLon,\n      ]}\n      eventHandlers={{\n        click: () => {\n          map.flyTo([\n            station.StationPosition.PositionLat,\n            station.StationPosition.PositionLon,\n          ])\n        },\n      }}\n    >\n      <StationPopup station={station} />\n    </LeafMarker>\n  )\n}\n\nexport default StationMarker\n","import PositionMarker from './PositionMarker'\nimport StationMarker from './StationMarker'\n\nconst Markers = {\n  PositionMarker,\n  StationMarker\n}\n\nexport default Markers","import styled from 'styled-components'\n\nexport const BikeIcon = styled.i`\n  color: ${props => props.color};\n  font-size: 12px;\n  font-weight: bold;\n  transform: translate(7px, -39px);\n`\n","import theme from '../../../../styles/theme'\nimport * as Styled from './styled'\n\nconst RouteIcon = () => {\n  const pathColor = theme.colors.accent[400]\n\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      viewBox=\"0 0 58 77\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M28.8003 0C12.9207 0 0.000293201 12.9204 0.000293201 28.782C-0.104107 51.984 27.7059 71.2224 28.8003 72C28.8003 72 57.7047 51.984 57.6003 28.8C57.6003 12.9204 44.6799 0 28.8003 0ZM28.8003 43.2C20.8443 43.2 14.4003 36.756 14.4003 28.8C14.4003 20.844 20.8443 14.4 28.8003 14.4C36.7563 14.4 43.2003 20.844 43.2003 28.8C43.2003 36.756 36.7563 43.2 28.8003 43.2Z\"\n        fill={pathColor}\n      />\n      <circle cx=\"29\" cy=\"29\" r=\"19\" fill=\"#fff\" />\n      <Styled.BikeIcon className=\"fas fa-biking\" color={pathColor} />\n    </svg>\n  )\n}\n\nexport default RouteIcon\n","import { Marker as LeafMarker } from 'react-leaflet'\n// import { TooltipContentWrapper } from '../../../styles/globalStyled'\nimport L from 'leaflet'\nimport RouteIcon from './RouteIcon'\nimport ReactDOMServer from 'react-dom/server'\nimport { useMap } from 'react-leaflet'\n\nconst generateRouteIcon = () => {\n  return L.divIcon({\n    iconSize: [30, 40],\n    iconAnchor: [15, 40],\n    html: ReactDOMServer.renderToString(<RouteIcon />),\n  })\n}\n\nconst RouteMarker = ({ routeSection }: { routeSection: [number, number] }) => {\n  const map = useMap()\n  const displayIcon = generateRouteIcon()\n\n  return (\n    <LeafMarker\n      icon={displayIcon}\n      position={routeSection}\n      eventHandlers={{\n        click: () => {\n          map.flyTo(routeSection)\n        },\n      }}\n    >\n      {/* <Tooltip offset={[15, -20]}>\n        <TooltipContentWrapper>{sectionName}</TooltipContentWrapper>\n      </Tooltip> */}\n    </LeafMarker>\n  )\n}\n\nexport default RouteMarker\n","import RouteMarker from '../RouteMarker'\nimport { Polyline } from 'react-leaflet'\nimport { Polyline as PolylineType } from '../../../service/tdxApi/types'\nimport { useMemo } from 'react'\nimport theme from '../../../styles/theme'\n\nconst RouteSet = ({ polyline }: { polyline: PolylineType }) => {\n  const polylineOption = useMemo(\n    () => ({\n      weight: 5,\n      color: theme.colors.accent[500],\n    }),\n    []\n  )\n\n  return (\n    <>\n      <RouteMarker routeSection={polyline[0]} />\n      <RouteMarker routeSection={polyline[polyline.length - 1]} />\n      <Polyline pathOptions={polylineOption} positions={polyline} />\n    </>\n  )\n}\n\nexport default RouteSet\n","import { useEffect, useRef, useState } from 'react'\nimport { MapContainer as Map, TileLayer } from 'react-leaflet'\nimport { Map as LeafletMap } from 'leaflet'\nimport { Routes as RouterRoutes, Route, Navigate } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState, AppDispatch } from '../../store'\nimport { stationRequestAction } from '../../store/station'\nimport { Routes } from '../../constants/routes'\nimport { GeolocationInitialState } from '../../store/geolocation'\nimport DisableEventPropagationContainer from '../DisableEventPropagationContainer'\nimport BicyclePage from '../BicyclePage'\nimport RoutePage from '../RoutePage'\nimport Markers from '../../components/Marks'\nimport RouteSet from '../../components/Marks/RouteSet'\n\nconst MapContainer = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const positionHistory = useRef<GeolocationInitialState['position']>(null)\n  const [map, setMap] = useState<LeafletMap | null>(null)\n  const { data: stations } = useSelector((state: RootState) => state.station)\n  const { current: currentRoute } = useSelector(\n    (state: RootState) => state.route\n  )\n  const { position, center } = useSelector(\n    (state: RootState) => state.geolocation\n  )\n  const { type } = useSelector((state: RootState) => state.displayType)\n\n  useEffect(() => {\n    if (stations.length > 0 && map) {\n      map.flyTo(center, 16, { animate: false })\n    }\n  }, [stations, center, map])\n\n  useEffect(() => {\n    if (currentRoute && map) {\n      map.flyTo(currentRoute.Routes[0][0], 16, { animate: false })\n    }\n  }, [map, currentRoute])\n\n  useEffect(() => {\n    if (positionHistory.current === null && position && map) {\n      if (/\\/bicycle$/.test(window.location.pathname)) {\n        dispatch(stationRequestAction({ position }))\n      } else {\n        map.flyTo(position, 16, { animate: false })\n      }\n    }\n    positionHistory.current = position\n  }, [position, dispatch, map])\n\n  return (\n    <Map\n      style={{ height: '100%', width: '100%' }}\n      center={center}\n      zoom={8}\n      whenCreated={setMap}\n      scrollWheelZoom={true}\n      zoomControl={false}\n    >\n      <DisableEventPropagationContainer>\n        <RouterRoutes>\n          <Route\n            path=\"/\"\n            element={<Navigate to={Routes.Bicycle} replace={true} />}\n          ></Route>\n          <Route path={Routes.Bicycle} element={<BicyclePage />}></Route>\n          <Route path={Routes.Routes} element={<RoutePage />}></Route>\n        </RouterRoutes>\n      </DisableEventPropagationContainer>\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://a.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n      />\n      {position && <Markers.PositionMarker position={position} />}\n      {stations.map((station) => (\n        <Markers.StationMarker\n          type={type}\n          key={station.StationID}\n          station={station}\n        />\n      ))}\n      {currentRoute &&\n        currentRoute.Routes.map((polyline, index) => (\n          <RouteSet key={`route-${index}`} polyline={polyline} />\n        ))}\n    </Map>\n  )\n}\n\nexport default MapContainer\n","import styled from 'styled-components'\nimport breakpoint from './styles/breakpoint'\nimport { BrowserRouter } from 'react-router-dom'\nimport Header from './components/Header'\nimport MapContainer from './containers/MapContainer'\n\nconst AppContent = styled.div`\n  position: relative;\n  width: 100vw;\n  height: calc(100vh - ${(props) => props.theme.layout.headerHeight.default});\n\n  ${breakpoint('md')`\n    height: calc(100vh - ${(props) => props.theme.layout.headerHeight.md});\n  `}\n`\n\nconst App = () => {\n  return (\n    <BrowserRouter basename={process.env.REACT_APP_GITHUB_PAGE_PATH}>\n      <Header />\n      <AppContent>\n        <MapContainer />\n      </AppContent>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import { combineReducers } from 'redux'\nimport stationReducer from './station'\nimport geolocationReducer from './geolocation'\nimport displayTypeReducer from './displayType'\nimport routeReducer from './route'\n\nconst rootReducer = combineReducers({\n  station: stationReducer,\n  geolocation: geolocationReducer,\n  displayType: displayTypeReducer,\n  route: routeReducer\n})\n\nexport default rootReducer","import axios from 'axios'\nimport { BikeShape, BikeShapeSorted, Polyline } from './types'\nimport Wkt from 'wicket'\n\nconst wkt = new Wkt.Wkt()\n\nexport const tdxAPI = axios.create({\n  baseURL: process.env.REACT_APP_TDX_API_URL,\n})\n\nexport type GeneralParameter = {\n  $format?: 'JSON' | 'XML'\n}\n\nexport type FetchPageParameter = {\n  $top?: number\n  $skip?: number\n}\n\nexport type SearchByCityParameter = {\n  $filter: ReturnType<TransformKeysToFilter>\n  city: string\n}\n\nexport type NearByParameter = {\n  $spatialFilter: ReturnType<TransfromPositionToSpatialFilter>\n  $filter: ReturnType<TransformKeysToFilter>\n}\n\ntype TransformKeysToFilter = (\n  required?: string[],\n  searchs?: {\n    keyword: string\n    searchFields: string[]\n  }[]\n) => string\n\nexport const transformKeysToFilter: TransformKeysToFilter = (\n  required = [],\n  searchs = []\n) => {\n  const requiredFilter = required.map((key) => key + ' ne null').join(' and ')\n  const searchFilter = searchs\n    .map(\n      (search) =>\n        `(${search.searchFields\n          .map((field) => `contains(${field}, '${search.keyword}')`)\n          .join(' or ')})`\n    )\n    .join(' and ')\n  return [requiredFilter, searchFilter].filter((filter) => filter).join(' and ')\n}\n\ntype TransfromPositionToSpatialFilter = (\n  position: [number, number], // [Lat, Lon]\n  range?: number\n) => string\n\nexport const transfromPositionToSpatialFilter: TransfromPositionToSpatialFilter = (position, range = 1000) => `nearby(${position[0]},${position[1]},${range})`\n\nexport const formatBikeShape: (data: BikeShape) => BikeShapeSorted = (data) => {\n  const geojson = wkt.read(data.Geometry).toJson()\n  // API response data may have incorrect format\n  const routes = (geojson.coordinates as Polyline[])\n    .filter((coor) => {\n      return coor[0] && Array.isArray(coor[0])\n    })\n    .map((coor) => coor.map((item) => item.reverse())) as Polyline[]\n  return { ...data, Routes: routes }\n}\n","import {\n  tdxAPI,\n  GeneralParameter,\n  SearchByCityParameter,\n  NearByParameter,\n} from '..'\nimport { BikeStation } from '../types'\n\nexport const stationRequired = [\n  'StationID',\n  'StationName/Zh_tw',\n  'StationPosition/PositionLon',\n  'StationPosition/PositionLat',\n]\nexport const stationSearchFields = ['StationName/Zh_tw', 'StationAddress/Zh_tw']\n\nexport const fetchBikeStationByCity = ({\n  $format = 'JSON',\n  $filter,\n  city,\n}: GeneralParameter & SearchByCityParameter) => {\n  return tdxAPI.get<BikeStation>(`/basic/v2/Bike/Station/City/${city}`, {\n    params: {\n      $format,\n      $filter,\n    },\n  })\n}\n\nexport const fetchBikeStationNearBy = ({\n  $format = 'JSON',\n  $spatialFilter,\n  $filter,\n}: GeneralParameter & NearByParameter) => {\n  return tdxAPI.get<BikeStation>(`/advanced/v2/Bike/Station/NearBy`, {\n    params: {\n      $format,\n      $spatialFilter,\n      $filter,\n    },\n  })\n}\n","import {\n  tdxAPI,\n  GeneralParameter,\n  SearchByCityParameter,\n  NearByParameter,\n} from '..'\nimport { BikeAvailability } from '../types'\n\nexport const availabilityRequired = [\n  'StationID',\n  'ServiceStatus',\n  'AvailableRentBikes',\n  'AvailableReturnBikes',\n]\n\nexport const fetchAvailabilityStationByCity = ({\n  $format = 'JSON',\n  $filter,\n  city,\n}: GeneralParameter & SearchByCityParameter) => {\n  return tdxAPI.get<BikeAvailability>(`/basic/v2/Bike/Availability/City/${city}`, {\n    params: {\n      $format,\n      $filter,\n    },\n  })\n}\n\nexport const fetchAvailabilityStationNearBy = ({\n  $format = 'JSON',\n  $spatialFilter,\n}: GeneralParameter & NearByParameter) => {\n  return tdxAPI.get<BikeAvailability>(`/advanced/v2/Bike/Availability/NearBy`, {\n    params: {\n      $format,\n      $spatialFilter,\n    },\n  })\n}\n","import { call, put, takeLatest } from 'redux-saga/effects'\nimport { BikeStation, BikeAvailability } from '../../service/tdxApi/types'\nimport { PayloadAction } from '@reduxjs/toolkit'\nimport { stationRequestAction, stationSuccessAction, stationFailureAction, RequestPayload, NearByRequestPayload } from '.'\nimport { fetchBikeStationByCity, fetchBikeStationNearBy, stationRequired, stationSearchFields } from '../../service/tdxApi/station'\nimport { fetchAvailabilityStationByCity, fetchAvailabilityStationNearBy, availabilityRequired } from '../../service/tdxApi/availability'\nimport { transformKeysToFilter, transfromPositionToSpatialFilter } from '../../service/tdxApi'\nimport { geolocationUpdateAction } from '../geolocation'\n\nfunction* fetchStationSaga({ payload }: PayloadAction<RequestPayload | NearByRequestPayload>) {\n  try {\n    let stationResponse: { data: BikeStation[] }\n    let availabilityResponse: { data: BikeAvailability[] }\n\n    if ('position' in payload) {\n      stationResponse = yield call(fetchBikeStationNearBy, {\n        $filter: transformKeysToFilter(stationRequired),\n        $spatialFilter: transfromPositionToSpatialFilter(payload.position)\n      })\n      availabilityResponse = yield call(fetchAvailabilityStationNearBy, {\n        $filter: transformKeysToFilter(availabilityRequired),\n        $spatialFilter: transfromPositionToSpatialFilter(payload.position)\n      })\n    } else {\n      const { keyword, city } = payload\n      stationResponse = yield call(fetchBikeStationByCity, {\n        $filter: transformKeysToFilter(stationRequired, [{ keyword, searchFields: stationSearchFields }]),\n        city\n      })\n      availabilityResponse = yield call(fetchAvailabilityStationByCity, {\n        $filter: transformKeysToFilter(availabilityRequired), city\n      })\n    }\n\n    const data = stationResponse.data.reduce((result, station) => {\n      const index = availabilityResponse.data.findIndex(availability => availability.StationID === station.StationID)\n      if (index > -1) {\n        result.push(Object.assign(station, availabilityResponse.data[index]))\n      }\n      return result\n    }, [] as (BikeStation & BikeAvailability)[])\n\n    yield put(\n      stationSuccessAction({\n        data\n      })\n    )\n    if ('position' in payload) {\n      yield put(\n        geolocationUpdateAction({\n          center: payload.position\n        })\n      )\n    } else if (data.length > 0) {\n      yield put(\n        geolocationUpdateAction({\n          center: [data[0].StationPosition.PositionLat, data[0].StationPosition.PositionLon]\n        })\n      )\n    }\n  } catch (error: any) {\n    yield put(\n      stationFailureAction({\n        error\n      })\n    )\n  }\n}\n\nfunction* stationSaga() {\n  yield takeLatest(stationRequestAction, fetchStationSaga)\n}\n\n/**** use take effect case  ****/\n// function* stationSaga() {\n//   while (true) {\n//     const payload: PayloadAction<RequestPayload> = yield take(stationRequestAction)\n//     yield fork(fetchStationSaga, payload)\n//   }\n// }\n\nexport default stationSaga","import { BikeShape } from '../types'\nimport {\n  tdxAPI,\n  GeneralParameter,\n  SearchByCityParameter,\n} from '..'\n\nexport const required = [\n  'Town',\n  'RoadSectionStart',\n  'RoadSectionEnd',\n  'Direction',\n  'CyclingLength',\n]\nexport const searchFields = ['RoadSectionStart', 'RoadSectionEnd', 'RouteName']\nexport const searchTownFields = ['Town']\n\nexport const fetchBikeCyclingShapByCity = ({\n  $format = 'JSON',\n  $filter,\n  city,\n}: GeneralParameter & SearchByCityParameter) => {\n  return tdxAPI.get<BikeShape[]>(`/basic/v2/Cycling/Shape/City/${city}`, {\n    params: {\n      $format,\n      $filter,\n    },\n  })\n}\n","import { call, put, SagaReturnType, takeLatest } from 'redux-saga/effects'\nimport { PayloadAction } from '@reduxjs/toolkit'\nimport { routeRequestAction, routeSuccessAction, routeFailureAction, routeSetCurrent, RequestPayload } from '.'\nimport { fetchBikeCyclingShapByCity, required, searchFields, searchTownFields } from '../../service/tdxApi/cyclingShape'\nimport { transformKeysToFilter } from '../../service/tdxApi'\nimport { formatBikeShape } from '../../service/tdxApi'\n\nfunction* fetchRouteSaga({ payload }: PayloadAction<RequestPayload>) {\n  try {\n    const { keyword, city } = payload\n    const { data }: SagaReturnType<typeof fetchBikeCyclingShapByCity> = yield call(fetchBikeCyclingShapByCity, {\n      $filter: transformKeysToFilter(required, [{ keyword, searchFields }, { keyword, searchFields: searchTownFields }]),\n      city\n    })\n\n    const sortedData = data.map(formatBikeShape)\n\n    yield put(\n      routeSuccessAction({\n        data: sortedData\n      })\n    )\n    yield put(\n      routeSetCurrent({\n        route: sortedData[0]\n      })\n    )\n  } catch (error: any) {\n    yield put(\n      routeFailureAction({\n        error\n      })\n    )\n  }\n}\n\nfunction* routeSaga() {\n  yield takeLatest(routeRequestAction, fetchRouteSaga)\n}\n\nexport default routeSaga","import axios from 'axios'\nimport { tdxAPI } from '../service/tdxApi'\n\nconst tdxAuthAPI = axios.create({\n  baseURL: process.env.REACT_APP_TDX_AUTH_API_URL\n})\n\nexport const fetchAuthToken = () => {\n  return new Promise((resolve, reject) => {\n    if (tdxAPI.defaults.headers.common['Authorization']) {\n      resolve(tdxAPI.defaults.headers.common['Authorization'])\n      return\n    }\n    const data = new URLSearchParams();\n    data.append('grant_type', 'client_credentials');\n    data.append('client_id', process.env.REACT_APP_TDX_APP_ID || '');\n    data.append('client_secret', process.env.REACT_APP_TDX_APP_KEY || '');\n    tdxAuthAPI.post<{ access_token: string }>('', data, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      }\n    }).then(res => {\n      tdxAPI.defaults.headers.common['Authorization'] = `Bearer ${res.data.access_token}`\n      resolve(res.data.access_token)\n    }).catch(error => {\n      reject(error)\n    })\n  })\n}","import { all, fork, call } from 'redux-saga/effects'\nimport stationSaga from './station/saga'\nimport routeSaga from './route/saga'\nimport { fetchAuthToken } from './authSaga'\n\nexport default function* rootSaga() {\n  yield call(fetchAuthToken)\n  yield all([\n    fork(stationSaga),\n    fork(routeSaga)\n  ])\n}","import { configureStore } from '@reduxjs/toolkit'\nimport createSagaMiddleware from '@redux-saga/core'\nimport rootReducer from './reducers'\nimport rootSaga from './sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(sagaMiddleware),\n  devTools: process.env.NODE_ENV !== 'production'\n})\n\nsagaMiddleware.run(rootSaga)\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\nexport default store","import { createGlobalStyle } from 'styled-components'\nimport theme from './theme'\n\nexport default createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n  html {\n    line-height: 1.15;\n    -webkit-text-size-adjust: 100%;\n  }\n  body {\n    margin: 0;\n  }\n  main {\n    display: block;\n  }\n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n  h1, h2, h3, h4, h5, h6, p {\n    margin: 0;\n    font-weight: normal;\n  }\n  hr {\n    box-sizing: content-box;\n    height: 0;\n    overflow: visible;\n  }\n  pre {\n    font-family: monospace, monospace;\n    font-size: 1em;\n  }\n  a {\n    background-color: transparent;\n  }\n  a:visited {\n    color: inherit;\n  }\n  a:-webkit-any-link {\n    color: inherit;\n  }\n  abbr[title] {\n    border-bottom: none;\n    text-decoration: underline;\n    text-decoration: underline dotted;\n  }\n  b,\n  strong {\n    font-weight: bolder;\n  }\n  code,\n  kbd,\n  samp {\n    font-family: monospace, monospace;\n    font-size: 1em;\n  }\n  small {\n    font-size: 80%;\n  }\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  sup {\n    top: -0.5em;\n  }\n  img {\n    border-style: none;\n  }\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit;\n    font-size: 100%;\n    line-height: 1.15;\n    margin: 0;\n    border:none;\n    background-image:none;\n    background-color:transparent;\n    box-shadow: none;\n    color: inherit;\n  }\n  button,\n  input {\n    overflow: visible;\n  }\n  input {\n    outline: none;\n  }\n  button,\n  select {\n    text-transform: none;\n    outline: none;\n  }\n  button,\n  [type=\"button\"],\n  [type=\"reset\"],\n  [type=\"submit\"] {\n    -webkit-appearance: button;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n  }\n  button::-moz-focus-inner,\n  [type=\"button\"]::-moz-focus-inner,\n  [type=\"reset\"]::-moz-focus-inner,\n  [type=\"submit\"]::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n  button:-moz-focusring,\n  [type=\"button\"]:-moz-focusring,\n  [type=\"reset\"]:-moz-focusring,\n  [type=\"submit\"]:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n  fieldset {\n    padding: 0.35em 0.75em 0.625em;\n  }\n  legend {\n    box-sizing: border-box;\n    color: inherit;\n    display: table;\n    max-width: 100%;\n    padding: 0;\n    white-space: normal;\n  }\n  progress {\n    vertical-align: baseline;\n  }\n  textarea {\n    overflow: auto;\n  }\n  [type=\"checkbox\"],\n  [type=\"radio\"] {\n    box-sizing: border-box;\n    padding: 0;\n  }\n  [type=\"number\"]::-webkit-inner-spin-button,\n  [type=\"number\"]::-webkit-outer-spin-button {\n    height: auto;\n  }\n  [type=\"search\"] {\n    -webkit-appearance: textfield;\n    outline-offset: -2px;\n  }\n  [type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  ::-webkit-file-upload-button {\n    -webkit-appearance: button;\n    font: inherit;\n  }\n  details {\n    display: block;\n  }\n  summary {\n    display: list-item;\n  }\n  template {\n    display: none;\n  }\n  [hidden] {\n    display: none;\n  }\n  .leaflet-tooltip {\n    background-color: ${theme.colors.grey[700]} !important;\n    border-color: ${theme.colors.grey[700]} !important;\n  }\n  .leaflet-tooltip-top:before {\n    border-top-color: ${theme.colors.grey[700]} !important;\n  }\n  .leaflet-tooltip-bottom:before {\n    border-bottom-color: ${theme.colors.grey[700]} !important;\n  }\n  .leaflet-tooltip-left:before {\n    border-left-color: ${theme.colors.grey[700]} !important;\n  }\n  .leaflet-tooltip-right:before {\n    border-right-color: ${theme.colors.grey[700]} !important;\n  }\n  .leaflet-popup-tip {\n    display: none;\n  }\n  .leaflet-div-icon {\n    background-color: transparent !important;\n    border: none !important;\n  }\n  .leaflet-popup-scrolled {\n    border: none !important;\n  }\n  .leaflet-bottom {\n    z-index: 401 !important;\n  }\n`","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport store from './store'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport theme from './styles/theme'\nimport ResetCss from './styles/resetCss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <ResetCss />\n        <App />\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}